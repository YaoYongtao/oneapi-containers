This file is the "third-party-programs.txt" file specified in the associated
Intel end user license agreement for the Intel software you are licensing.
The third party programs and their corresponding required notices and/or
license terms are listed below.

-------------------------------------------------------------------------------

1. pdsh* - parallel distributed shell
	 Copyright (c) Jim Garlick
	 Contributors:
	 Al Chu and Mark Grondona

   lshw* - HardWare LiSter for Linux
   Copyright (c) Lyonel Vincent

                    GNU GENERAL PUBLIC LICENSE
                       Version 2, June 1991

 Copyright (C) 1989, 1991 Free Software Foundation, Inc.,
 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 Everyone is permitted to copy and distribute verbatim copies
 of this license document, but changing it is not allowed.

                            Preamble

  The licenses for most software are designed to take away your
freedom to share and change it.  By contrast, the GNU General Public
License is intended to guarantee your freedom to share and change free
software--to make sure the software is free for all its users.  This
General Public License applies to most of the Free Software
Foundation's software and to any other program whose authors commit to
using it.  (Some other Free Software Foundation software is covered by
the GNU Lesser General Public License instead.)  You can apply it to
your programs, too.

  When we speak of free software, we are referring to freedom, not
price.  Our General Public Licenses are designed to make sure that you
have the freedom to distribute copies of free software (and charge for
this service if you wish), that you receive source code or can get it
if you want it, that you can change the software or use pieces of it
in new free programs; and that you know you can do these things.

  To protect your rights, we need to make restrictions that forbid
anyone to deny you these rights or to ask you to surrender the rights.
These restrictions translate to certain responsibilities for you if you
distribute copies of the software, or if you modify it.

  For example, if you distribute copies of such a program, whether
gratis or for a fee, you must give the recipients all the rights that
you have.  You must make sure that they, too, receive or can get the
source code.  And you must show them these terms so they know their
rights.

  We protect your rights with two steps: (1) copyright the software, and
(2) offer you this license which gives you legal permission to copy,
distribute and/or modify the software.

  Also, for each author's protection and ours, we want to make certain
that everyone understands that there is no warranty for this free
software.  If the software is modified by someone else and passed on, we
want its recipients to know that what they have is not the original, so
that any problems introduced by others will not reflect on the original
authors' reputations.

  Finally, any free program is threatened constantly by software
patents.  We wish to avoid the danger that redistributors of a free
program will individually obtain patent licenses, in effect making the
program proprietary.  To prevent this, we have made it clear that any
patent must be licensed for everyone's free use or not licensed at all.

  The precise terms and conditions for copying, distribution and
modification follow.

                    GNU GENERAL PUBLIC LICENSE
   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION

  0. This License applies to any program or other work which contains
a notice placed by the copyright holder saying it may be distributed
under the terms of this General Public License.  The "Program", below,
refers to any such program or work, and a "work based on the Program"
means either the Program or any derivative work under copyright law:
that is to say, a work containing the Program or a portion of it,
either verbatim or with modifications and/or translated into another
language.  (Hereinafter, translation is included without limitation in
the term "modification".)  Each licensee is addressed as "you".

Activities other than copying, distribution and modification are not
covered by this License; they are outside its scope.  The act of
running the Program is not restricted, and the output from the Program
is covered only if its contents constitute a work based on the
Program (independent of having been made by running the Program).
Whether that is true depends on what the Program does.

  1. You may copy and distribute verbatim copies of the Program's
source code as you receive it, in any medium, provided that you
conspicuously and appropriately publish on each copy an appropriate
copyright notice and disclaimer of warranty; keep intact all the
notices that refer to this License and to the absence of any warranty;
and give any other recipients of the Program a copy of this License
along with the Program.

You may charge a fee for the physical act of transferring a copy, and
you may at your option offer warranty protection in exchange for a fee.

  2. You may modify your copy or copies of the Program or any portion
of it, thus forming a work based on the Program, and copy and
distribute such modifications or work under the terms of Section 1
above, provided that you also meet all of these conditions:

    a) You must cause the modified files to carry prominent notices
    stating that you changed the files and the date of any change.

    b) You must cause any work that you distribute or publish, that in
    whole or in part contains or is derived from the Program or any
    part thereof, to be licensed as a whole at no charge to all third
    parties under the terms of this License.

    c) If the modified program normally reads commands interactively
    when run, you must cause it, when started running for such
    interactive use in the most ordinary way, to print or display an
    announcement including an appropriate copyright notice and a
    notice that there is no warranty (or else, saying that you provide
    a warranty) and that users may redistribute the program under
    these conditions, and telling the user how to view a copy of this
    License.  (Exception: if the Program itself is interactive but
    does not normally print such an announcement, your work based on
    the Program is not required to print an announcement.)

These requirements apply to the modified work as a whole.  If
identifiable sections of that work are not derived from the Program,
and can be reasonably considered independent and separate works in
themselves, then this License, and its terms, do not apply to those
sections when you distribute them as separate works.  But when you
distribute the same sections as part of a whole which is a work based
on the Program, the distribution of the whole must be on the terms of
this License, whose permissions for other licensees extend to the
entire whole, and thus to each and every part regardless of who wrote it.

Thus, it is not the intent of this section to claim rights or contest
your rights to work written entirely by you; rather, the intent is to
exercise the right to control the distribution of derivative or
collective works based on the Program.

In addition, mere aggregation of another work not based on the Program
with the Program (or with a work based on the Program) on a volume of
a storage or distribution medium does not bring the other work under
the scope of this License.

  3. You may copy and distribute the Program (or a work based on it,
under Section 2) in object code or executable form under the terms of
Sections 1 and 2 above provided that you also do one of the following:

    a) Accompany it with the complete corresponding machine-readable
    source code, which must be distributed under the terms of Sections
    1 and 2 above on a medium customarily used for software interchange; or,

    b) Accompany it with a written offer, valid for at least three
    years, to give any third party, for a charge no more than your
    cost of physically performing source distribution, a complete
    machine-readable copy of the corresponding source code, to be
    distributed under the terms of Sections 1 and 2 above on a medium
    customarily used for software interchange; or,

    c) Accompany it with the information you received as to the offer
    to distribute corresponding source code.  (This alternative is
    allowed only for noncommercial distribution and only if you
    received the program in object code or executable form with such
    an offer, in accord with Subsection b above.)

The source code for a work means the preferred form of the work for
making modifications to it.  For an executable work, complete source
code means all the source code for all modules it contains, plus any
associated interface definition files, plus the scripts used to
control compilation and installation of the executable.  However, as a
special exception, the source code distributed need not include
anything that is normally distributed (in either source or binary
form) with the major components (compiler, kernel, and so on) of the
operating system on which the executable runs, unless that component
itself accompanies the executable.

If distribution of executable or object code is made by offering
access to copy from a designated place, then offering equivalent
access to copy the source code from the same place counts as
distribution of the source code, even though third parties are not
compelled to copy the source along with the object code.

  4. You may not copy, modify, sublicense, or distribute the Program
except as expressly provided under this License.  Any attempt
otherwise to copy, modify, sublicense or distribute the Program is
void, and will automatically terminate your rights under this License.
However, parties who have received copies, or rights, from you under
this License will not have their licenses terminated so long as such
parties remain in full compliance.

  5. You are not required to accept this License, since you have not
signed it.  However, nothing else grants you permission to modify or
distribute the Program or its derivative works.  These actions are
prohibited by law if you do not accept this License.  Therefore, by
modifying or distributing the Program (or any work based on the
Program), you indicate your acceptance of this License to do so, and
all its terms and conditions for copying, distributing or modifying
the Program or works based on it.

  6. Each time you redistribute the Program (or any work based on the
Program), the recipient automatically receives a license from the
original licensor to copy, distribute or modify the Program subject to
these terms and conditions.  You may not impose any further
restrictions on the recipients' exercise of the rights granted herein.
You are not responsible for enforcing compliance by third parties to
this License.

  7. If, as a consequence of a court judgment or allegation of patent
infringement or for any other reason (not limited to patent issues),
conditions are imposed on you (whether by court order, agreement or
otherwise) that contradict the conditions of this License, they do not
excuse you from the conditions of this License.  If you cannot
distribute so as to satisfy simultaneously your obligations under this
License and any other pertinent obligations, then as a consequence you
may not distribute the Program at all.  For example, if a patent
license would not permit royalty-free redistribution of the Program by
all those who receive copies directly or indirectly through you, then
the only way you could satisfy both it and this License would be to
refrain entirely from distribution of the Program.

If any portion of this section is held invalid or unenforceable under
any particular circumstance, the balance of the section is intended to
apply and the section as a whole is intended to apply in other
circumstances.

It is not the purpose of this section to induce you to infringe any
patents or other property right claims or to contest validity of any
such claims; this section has the sole purpose of protecting the
integrity of the free software distribution system, which is
implemented by public license practices.  Many people have made
generous contributions to the wide range of software distributed
through that system in reliance on consistent application of that
system; it is up to the author/donor to decide if he or she is willing
to distribute software through any other system and a licensee cannot
impose that choice.

This section is intended to make thoroughly clear what is believed to
be a consequence of the rest of this License.

  8. If the distribution and/or use of the Program is restricted in
certain countries either by patents or by copyrighted interfaces, the
original copyright holder who places the Program under this License
may add an explicit geographical distribution limitation excluding
those countries, so that distribution is permitted only in or among
countries not thus excluded.  In such case, this License incorporates
the limitation as if written in the body of this License.

  9. The Free Software Foundation may publish revised and/or new versions
of the General Public License from time to time.  Such new versions will
be similar in spirit to the present version, but may differ in detail to
address new problems or concerns.

Each version is given a distinguishing version number.  If the Program
specifies a version number of this License which applies to it and "any
later version", you have the option of following the terms and conditions
either of that version or of any later version published by the Free
Software Foundation.  If the Program does not specify a version number of
this License, you may choose any version ever published by the Free Software
Foundation.

  10. If you wish to incorporate parts of the Program into other free
programs whose distribution conditions are different, write to the author
to ask for permission.  For software which is copyrighted by the Free
Software Foundation, write to the Free Software Foundation; we sometimes
make exceptions for this.  Our decision will be guided by the two goals
of preserving the free status of all derivatives of our free software and
of promoting the sharing and reuse of software generally.

                            NO WARRANTY

  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
REPAIR OR CORRECTION.

  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.

                     END OF TERMS AND CONDITIONS

            How to Apply These Terms to Your New Programs

  If you develop a new program, and you want it to be of the greatest
possible use to the public, the best way to achieve this is to make it
free software which everyone can redistribute and change under these terms.

  To do so, attach the following notices to the program.  It is safest
to attach them to the start of each source file to most effectively
convey the exclusion of warranty; and each file should have at least
the "copyright" line and a pointer to where the full notice is found.

    <one line to give the program's name and a brief idea of what it does.>
    Copyright (C) <year>  <name of author>

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License along
    with this program; if not, write to the Free Software Foundation, Inc.,
    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

Also add information on how to contact you by electronic and paper mail.

If the program is interactive, make it output a short notice like this
when it starts in an interactive mode:

    Gnomovision version 69, Copyright (C) year name of author
    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
    This is free software, and you are welcome to redistribute it
    under certain conditions; type `show c' for details.

The hypothetical commands `show w' and `show c' should show the appropriate
parts of the General Public License.  Of course, the commands you use may
be called something other than `show w' and `show c'; they could even be
mouse-clicks or menu items--whatever suits your program.

You should also get your employer (if you work as a programmer) or your
school, if any, to sign a "copyright disclaimer" for the program, if
necessary.  Here is a sample; alter the names:

  Yoyodyne, Inc., hereby disclaims all copyright interest in the program
  `Gnomovision' (which makes passes at compilers) written by James Hacker.

  <signature of Ty Coon>, 1 April 1989
  Ty Coon, President of Vice

This General Public License does not permit incorporating your program into
proprietary programs.  If your program is a subroutine library, you may
consider it more useful to permit linking proprietary applications with the
library.  If this is what you want to do, use the GNU Lesser General
Public License instead of this License.

-------------------------------------------------------------------------------

2. unixODBC* - an Open Source ODBC sub-system and an ODBC SDK
Copyright (c)
Authors of unixODBC...

Peter Harvey <pharvey@codebydesign.com>
Nick Gorham <nick@easysoft.com>

The PostgreSQL Driver was modified from the standard PostgreSQL
ODBC driver (http://www.postgresql.org)

The NNTP Driver as written by Ke Jin

The MySQL driver is a mirror from the MySQL folks.

Other contributors include

Alex Hornby
Axel Reinhold
Alexander Mitin
Artiom Morozov
Arun K Desai
Bard Hustveit
Bill Bouma
Bill Medland
Bojnourdi Kaikavous
Brian Harris
Bruce A Mallett
Charles Morrison
Charles Overbeck
Chris Friesen
Christian Jullien
Christian Werner
Constantine Filin
Craig A Berry
Dave Berry
David Brown
Dmitriy Yusupov
Donnie Pinkston
Emile Heitor
Erik Lundqvist
Frediano Ziglio
Gary Bunting
Geoffrey Gowan
Greg Bentz
Heikki Linnakangas
Holger Bischoff
Holger Schurig
Honza Horak
Hristo Hristov
Hugh McMaster
Ian Ashley
James Dugal
Jan Cihlar
Jan Stanek
Jason Crummack
Jay Cai
Jay Q. Cai
Jay Van Vark
Jeff Garzik
Jean Louis Charton
Jens Schlegel
Jess Balint
Jim Ziegler
Joel W. Reed
John C. Rood
John L Miller
John Moreshead
Jon Kåre Hellan
Jon Pounder
Jon Willeke
Jürgen Pfeifer
Keith Woodard
Lars Doelle
Manush Dodunekov
Marcogiusti
Markus Beth
Mark Chopping
Mark Hessling
Mark Vanderwiel
Martin Edlman
Martin Evans
Martin Hobbs
Martin Kittel
Martin Lacko
Max Khon
Michael Koch
Michael Vetter
Miloslav Marik
Mike Schultz
Mikko Vierula
Murad Nayal
Murray Todd Williams
Nehal J Wani
Nikolai Afanasiev
Ocke Janssen
Oded Comay
Ola Sundell
Oren Nechushtan
Patrice Favre
Paul Richardson
Per Bengtsson
Per I. Mathisen
Petr Vandrovec
Pierangelo Masarati
Rafi Einstein
Ralf Fassel
Rick Flower
Richard Kettlewell
Ron Norman
Samuel Cote
Scot Loach
Scott Courtney
Shandy J. Brown
Simon Pepping
Stefan Radman
Steffen Dettmer
Steve Gilbert
Steve Langasek
Steven M. Schultz
Steven Reynolds
Stuart Coupe
Thomas Langen
Tim Roepken
Tomas Zellerin
Trond Eivind Glomsrød
Venu Anuganti
Zoltan Boszormenyi

If I have omitted anyone from this let me know and I will amend it ASAP.

I have removed the email address of the people on this list. If someone
wants to get in touch, mail me and I will pass it on.

Nick Gorham

                  GNU LESSER GENERAL PUBLIC LICENSE
                       Version 2.1, February 1999

 Copyright (C) 1991, 1999 Free Software Foundation, Inc.
 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 Everyone is permitted to copy and distribute verbatim copies
 of this license document, but changing it is not allowed.

[This is the first released version of the Lesser GPL.  It also counts
 as the successor of the GNU Library Public License, version 2, hence
 the version number 2.1.]

                            Preamble

  The licenses for most software are designed to take away your
freedom to share and change it.  By contrast, the GNU General Public
Licenses are intended to guarantee your freedom to share and change
free software--to make sure the software is free for all its users.

  This license, the Lesser General Public License, applies to some
specially designated software packages--typically libraries--of the
Free Software Foundation and other authors who decide to use it.  You
can use it too, but we suggest you first think carefully about whether
this license or the ordinary General Public License is the better
strategy to use in any particular case, based on the explanations below.

  When we speak of free software, we are referring to freedom of use,
not price.  Our General Public Licenses are designed to make sure that
you have the freedom to distribute copies of free software (and charge
for this service if you wish); that you receive source code or can get
it if you want it; that you can change the software and use pieces of
it in new free programs; and that you are informed that you can do
these things.

  To protect your rights, we need to make restrictions that forbid
distributors to deny you these rights or to ask you to surrender these
rights.  These restrictions translate to certain responsibilities for
you if you distribute copies of the library or if you modify it.

  For example, if you distribute copies of the library, whether gratis
or for a fee, you must give the recipients all the rights that we gave
you.  You must make sure that they, too, receive or can get the source
code.  If you link other code with the library, you must provide
complete object files to the recipients, so that they can relink them
with the library after making changes to the library and recompiling
it.  And you must show them these terms so they know their rights.

  We protect your rights with a two-step method: (1) we copyright the
library, and (2) we offer you this license, which gives you legal
permission to copy, distribute and/or modify the library.

  To protect each distributor, we want to make it very clear that
there is no warranty for the free library.  Also, if the library is
modified by someone else and passed on, the recipients should know
that what they have is not the original version, so that the original
author's reputation will not be affected by problems that might be
introduced by others.

  Finally, software patents pose a constant threat to the existence of
any free program.  We wish to make sure that a company cannot
effectively restrict the users of a free program by obtaining a
restrictive license from a patent holder.  Therefore, we insist that
any patent license obtained for a version of the library must be
consistent with the full freedom of use specified in this license.

  Most GNU software, including some libraries, is covered by the
ordinary GNU General Public License.  This license, the GNU Lesser
General Public License, applies to certain designated libraries, and
is quite different from the ordinary General Public License.  We use
this license for certain libraries in order to permit linking those
libraries into non-free programs.

  When a program is linked with a library, whether statically or using
a shared library, the combination of the two is legally speaking a
combined work, a derivative of the original library.  The ordinary
General Public License therefore permits such linking only if the
entire combination fits its criteria of freedom.  The Lesser General
Public License permits more lax criteria for linking other code with
the library.

  We call this license the "Lesser" General Public License because it
does Less to protect the user's freedom than the ordinary General
Public License.  It also provides other free software developers Less
of an advantage over competing non-free programs.  These disadvantages
are the reason we use the ordinary General Public License for many
libraries.  However, the Lesser license provides advantages in certain
special circumstances.

  For example, on rare occasions, there may be a special need to
encourage the widest possible use of a certain library, so that it becomes
a de-facto standard.  To achieve this, non-free programs must be
allowed to use the library.  A more frequent case is that a free
library does the same job as widely used non-free libraries.  In this
case, there is little to gain by limiting the free library to free
software only, so we use the Lesser General Public License.

  In other cases, permission to use a particular library in non-free
programs enables a greater number of people to use a large body of
free software.  For example, permission to use the GNU C Library in
non-free programs enables many more people to use the whole GNU
operating system, as well as its variant, the GNU/Linux operating
system.

  Although the Lesser General Public License is Less protective of the
users' freedom, it does ensure that the user of a program that is
linked with the Library has the freedom and the wherewithal to run
that program using a modified version of the Library.

  The precise terms and conditions for copying, distribution and
modification follow.  Pay close attention to the difference between a
"work based on the library" and a "work that uses the library".  The
former contains code derived from the library, whereas the latter must
be combined with the library in order to run.

                  GNU LESSER GENERAL PUBLIC LICENSE
   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION

  0. This License Agreement applies to any software library or other
program which contains a notice placed by the copyright holder or
other authorized party saying it may be distributed under the terms of
this Lesser General Public License (also called "this License").
Each licensee is addressed as "you".

  A "library" means a collection of software functions and/or data
prepared so as to be conveniently linked with application programs
(which use some of those functions and data) to form executables.

  The "Library", below, refers to any such software library or work
which has been distributed under these terms.  A "work based on the
Library" means either the Library or any derivative work under
copyright law: that is to say, a work containing the Library or a
portion of it, either verbatim or with modifications and/or translated
straightforwardly into another language.  (Hereinafter, translation is
included without limitation in the term "modification".)

  "Source code" for a work means the preferred form of the work for
making modifications to it.  For a library, complete source code means
all the source code for all modules it contains, plus any associated
interface definition files, plus the scripts used to control compilation
and installation of the library.

  Activities other than copying, distribution and modification are not
covered by this License; they are outside its scope.  The act of
running a program using the Library is not restricted, and output from
such a program is covered only if its contents constitute a work based
on the Library (independent of the use of the Library in a tool for
writing it).  Whether that is true depends on what the Library does
and what the program that uses the Library does.

  1. You may copy and distribute verbatim copies of the Library's
complete source code as you receive it, in any medium, provided that
you conspicuously and appropriately publish on each copy an
appropriate copyright notice and disclaimer of warranty; keep intact
all the notices that refer to this License and to the absence of any
warranty; and distribute a copy of this License along with the
Library.

  You may charge a fee for the physical act of transferring a copy,
and you may at your option offer warranty protection in exchange for a
fee.

  2. You may modify your copy or copies of the Library or any portion
of it, thus forming a work based on the Library, and copy and
distribute such modifications or work under the terms of Section 1
above, provided that you also meet all of these conditions:

    a) The modified work must itself be a software library.

    b) You must cause the files modified to carry prominent notices
    stating that you changed the files and the date of any change.

    c) You must cause the whole of the work to be licensed at no
    charge to all third parties under the terms of this License.

    d) If a facility in the modified Library refers to a function or a
    table of data to be supplied by an application program that uses
    the facility, other than as an argument passed when the facility
    is invoked, then you must make a good faith effort to ensure that,
    in the event an application does not supply such function or
    table, the facility still operates, and performs whatever part of
    its purpose remains meaningful.

    (For example, a function in a library to compute square roots has
    a purpose that is entirely well-defined independent of the
    application.  Therefore, Subsection 2d requires that any
    application-supplied function or table used by this function must
    be optional: if the application does not supply it, the square
    root function must still compute square roots.)

These requirements apply to the modified work as a whole.  If
identifiable sections of that work are not derived from the Library,
and can be reasonably considered independent and separate works in
themselves, then this License, and its terms, do not apply to those
sections when you distribute them as separate works.  But when you
distribute the same sections as part of a whole which is a work based
on the Library, the distribution of the whole must be on the terms of
this License, whose permissions for other licensees extend to the
entire whole, and thus to each and every part regardless of who wrote
it.

Thus, it is not the intent of this section to claim rights or contest
your rights to work written entirely by you; rather, the intent is to
exercise the right to control the distribution of derivative or
collective works based on the Library.

In addition, mere aggregation of another work not based on the Library
with the Library (or with a work based on the Library) on a volume of
a storage or distribution medium does not bring the other work under
the scope of this License.

  3. You may opt to apply the terms of the ordinary GNU General Public
License instead of this License to a given copy of the Library.  To do
this, you must alter all the notices that refer to this License, so
that they refer to the ordinary GNU General Public License, version 2,
instead of to this License.  (If a newer version than version 2 of the
ordinary GNU General Public License has appeared, then you can specify
that version instead if you wish.)  Do not make any other change in
these notices.

  Once this change is made in a given copy, it is irreversible for
that copy, so the ordinary GNU General Public License applies to all
subsequent copies and derivative works made from that copy.

  This option is useful when you wish to copy part of the code of
the Library into a program that is not a library.

  4. You may copy and distribute the Library (or a portion or
derivative of it, under Section 2) in object code or executable form
under the terms of Sections 1 and 2 above provided that you accompany
it with the complete corresponding machine-readable source code, which
must be distributed under the terms of Sections 1 and 2 above on a
medium customarily used for software interchange.

  If distribution of object code is made by offering access to copy
from a designated place, then offering equivalent access to copy the
source code from the same place satisfies the requirement to
distribute the source code, even though third parties are not
compelled to copy the source along with the object code.

  5. A program that contains no derivative of any portion of the
Library, but is designed to work with the Library by being compiled or
linked with it, is called a "work that uses the Library".  Such a
work, in isolation, is not a derivative work of the Library, and
therefore falls outside the scope of this License.

  However, linking a "work that uses the Library" with the Library
creates an executable that is a derivative of the Library (because it
contains portions of the Library), rather than a "work that uses the
library".  The executable is therefore covered by this License.
Section 6 states terms for distribution of such executables.

  When a "work that uses the Library" uses material from a header file
that is part of the Library, the object code for the work may be a
derivative work of the Library even though the source code is not.
Whether this is true is especially significant if the work can be
linked without the Library, or if the work is itself a library.  The
threshold for this to be true is not precisely defined by law.

  If such an object file uses only numerical parameters, data
structure layouts and accessors, and small macros and small inline
functions (ten lines or less in length), then the use of the object
file is unrestricted, regardless of whether it is legally a derivative
work.  (Executables containing this object code plus portions of the
Library will still fall under Section 6.)

  Otherwise, if the work is a derivative of the Library, you may
distribute the object code for the work under the terms of Section 6.
Any executables containing that work also fall under Section 6,
whether or not they are linked directly with the Library itself.

  6. As an exception to the Sections above, you may also combine or
link a "work that uses the Library" with the Library to produce a
work containing portions of the Library, and distribute that work
under terms of your choice, provided that the terms permit
modification of the work for the customer's own use and reverse
engineering for debugging such modifications.

  You must give prominent notice with each copy of the work that the
Library is used in it and that the Library and its use are covered by
this License.  You must supply a copy of this License.  If the work
during execution displays copyright notices, you must include the
copyright notice for the Library among them, as well as a reference
directing the user to the copy of this License.  Also, you must do one
of these things:

    a) Accompany the work with the complete corresponding
    machine-readable source code for the Library including whatever
    changes were used in the work (which must be distributed under
    Sections 1 and 2 above); and, if the work is an executable linked
    with the Library, with the complete machine-readable "work that
    uses the Library", as object code and/or source code, so that the
    user can modify the Library and then relink to produce a modified
    executable containing the modified Library.  (It is understood
    that the user who changes the contents of definitions files in the
    Library will not necessarily be able to recompile the application
    to use the modified definitions.)

    b) Use a suitable shared library mechanism for linking with the
    Library.  A suitable mechanism is one that (1) uses at run time a
    copy of the library already present on the user's computer system,
    rather than copying library functions into the executable, and (2)
    will operate properly with a modified version of the library, if
    the user installs one, as long as the modified version is
    interface-compatible with the version that the work was made with.

    c) Accompany the work with a written offer, valid for at
    least three years, to give the same user the materials
    specified in Subsection 6a, above, for a charge no more
    than the cost of performing this distribution.

    d) If distribution of the work is made by offering access to copy
    from a designated place, offer equivalent access to copy the above
    specified materials from the same place.

    e) Verify that the user has already received a copy of these
    materials or that you have already sent this user a copy.

  For an executable, the required form of the "work that uses the
Library" must include any data and utility programs needed for
reproducing the executable from it.  However, as a special exception,
the materials to be distributed need not include anything that is
normally distributed (in either source or binary form) with the major
components (compiler, kernel, and so on) of the operating system on
which the executable runs, unless that component itself accompanies
the executable.

  It may happen that this requirement contradicts the license
restrictions of other proprietary libraries that do not normally
accompany the operating system.  Such a contradiction means you cannot
use both them and the Library together in an executable that you
distribute.

  7. You may place library facilities that are a work based on the
Library side-by-side in a single library together with other library
facilities not covered by this License, and distribute such a combined
library, provided that the separate distribution of the work based on
the Library and of the other library facilities is otherwise
permitted, and provided that you do these two things:

    a) Accompany the combined library with a copy of the same work
    based on the Library, uncombined with any other library
    facilities.  This must be distributed under the terms of the
    Sections above.

    b) Give prominent notice with the combined library of the fact
    that part of it is a work based on the Library, and explaining
    where to find the accompanying uncombined form of the same work.

  8. You may not copy, modify, sublicense, link with, or distribute
the Library except as expressly provided under this License.  Any
attempt otherwise to copy, modify, sublicense, link with, or
distribute the Library is void, and will automatically terminate your
rights under this License.  However, parties who have received copies,
or rights, from you under this License will not have their licenses
terminated so long as such parties remain in full compliance.

  9. You are not required to accept this License, since you have not
signed it.  However, nothing else grants you permission to modify or
distribute the Library or its derivative works.  These actions are
prohibited by law if you do not accept this License.  Therefore, by
modifying or distributing the Library (or any work based on the
Library), you indicate your acceptance of this License to do so, and
all its terms and conditions for copying, distributing or modifying
the Library or works based on it.

  10. Each time you redistribute the Library (or any work based on the
Library), the recipient automatically receives a license from the
original licensor to copy, distribute, link with or modify the Library
subject to these terms and conditions.  You may not impose any further
restrictions on the recipients' exercise of the rights granted herein.
You are not responsible for enforcing compliance by third parties with
this License.

  11. If, as a consequence of a court judgment or allegation of patent
infringement or for any other reason (not limited to patent issues),
conditions are imposed on you (whether by court order, agreement or
otherwise) that contradict the conditions of this License, they do not
excuse you from the conditions of this License.  If you cannot
distribute so as to satisfy simultaneously your obligations under this
License and any other pertinent obligations, then as a consequence you
may not distribute the Library at all.  For example, if a patent
license would not permit royalty-free redistribution of the Library by
all those who receive copies directly or indirectly through you, then
the only way you could satisfy both it and this License would be to
refrain entirely from distribution of the Library.

If any portion of this section is held invalid or unenforceable under any
particular circumstance, the balance of the section is intended to apply,
and the section as a whole is intended to apply in other circumstances.

It is not the purpose of this section to induce you to infringe any
patents or other property right claims or to contest validity of any
such claims; this section has the sole purpose of protecting the
integrity of the free software distribution system which is
implemented by public license practices.  Many people have made
generous contributions to the wide range of software distributed
through that system in reliance on consistent application of that
system; it is up to the author/donor to decide if he or she is willing
to distribute software through any other system and a licensee cannot
impose that choice.

This section is intended to make thoroughly clear what is believed to
be a consequence of the rest of this License.

  12. If the distribution and/or use of the Library is restricted in
certain countries either by patents or by copyrighted interfaces, the
original copyright holder who places the Library under this License may add
an explicit geographical distribution limitation excluding those countries,
so that distribution is permitted only in or among countries not thus
excluded.  In such case, this License incorporates the limitation as if
written in the body of this License.

  13. The Free Software Foundation may publish revised and/or new
versions of the Lesser General Public License from time to time.
Such new versions will be similar in spirit to the present version,
but may differ in detail to address new problems or concerns.

Each version is given a distinguishing version number.  If the Library
specifies a version number of this License which applies to it and
"any later version", you have the option of following the terms and
conditions either of that version or of any later version published by
the Free Software Foundation.  If the Library does not specify a
license version number, you may choose any version ever published by
the Free Software Foundation.

  14. If you wish to incorporate parts of the Library into other free
programs whose distribution conditions are incompatible with these,
write to the author to ask for permission.  For software which is
copyrighted by the Free Software Foundation, write to the Free
Software Foundation; we sometimes make exceptions for this.  Our
decision will be guided by the two goals of preserving the free status
of all derivatives of our free software and of promoting the sharing
and reuse of software generally.

                            NO WARRANTY

  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO
WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.
EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR
OTHER PARTIES PROVIDE THE LIBRARY "AS IS" WITHOUT WARRANTY OF ANY
KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE
LIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME
THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.

  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN
WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY
AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU
FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR
CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE
LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING
RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A
FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF
SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH
DAMAGES.

                     END OF TERMS AND CONDITIONS

           How to Apply These Terms to Your New Libraries

  If you develop a new library, and you want it to be of the greatest
possible use to the public, we recommend making it free software that
everyone can redistribute and change.  You can do so by permitting
redistribution under these terms (or, alternatively, under the terms of the
ordinary General Public License).

  To apply these terms, attach the following notices to the library.  It is
safest to attach them to the start of each source file to most effectively
convey the exclusion of warranty; and each file should have at least the
"copyright" line and a pointer to where the full notice is found.

    <one line to give the library's name and a brief idea of what it does.>
    Copyright (C) <year>  <name of author>

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

Also add information on how to contact you by electronic and paper mail.

You should also get your employer (if you work as a programmer) or your
school, if any, to sign a "copyright disclaimer" for the library, if
necessary.  Here is a sample; alter the names:

  Yoyodyne, Inc., hereby disclaims all copyright interest in the
  library `Frob' (a library for tweaking knobs) written by James Random Hacker.

  <signature of Ty Coon>, 1 April 1990
  Ty Coon, President of Vice

-------------------------------------------------------------------------------

3. ZeroMQ*
Corporate Contributors
======================

Copyright (c) 2007-2014 iMatix Corporation
Copyright (c) 2009-2011 250bpm s.r.o.
Copyright (c) 2010-2011 Miru Limited
Copyright (c) 2011 VMware, Inc.
Copyright (c) 2012 Spotify AB
Copyright (c) 2013 Ericsson AB
Copyright (c) 2014 AppDynamics Inc.
Copyright (c) 2015 Google, Inc.
Copyright (c) 2015-2016 Brocade Communications Systems Inc.

Individual Contributors
=======================

AJ Lewis
Alexej Lotz
Andrew Thompson
André Caron
Asko Kauppi
Attila Mark
Barak Amar
Ben Gray
Bernd Melchers
Bernd Prager
Bob Beaty
Brandon Carpenter
Brett Cameron
Brian Buchanan
Burak Arslan
Carl Clemens
Chia-liang Kao
Chris Busbey
Chris Rempel
Chris Wong
Christian Gudrian
Christian Kamm
Chuck Remes
Conrad D. Steenberg
Constantin Rack
Daniel J. Bernstein
Dhammika Pathirana
Dhruva Krishnamurthy
Dirk O. Kaar
Doron Somech
Douglas Creager
Drew Crawford
Erich Heine
Erik Hugne
Erik Rigtorp
Fabien Ninoles
Frank Denis
George Neill
Gerard Toonstra
Ghislain Putois
Gonzalo Diethelm
Guido Goldstein
Harald Achitz
Hardeep Singh
Hiten Pandya
Ian Barber
Ilja Golshtein
Ilya Kulakov
Ivo Danihelka
Jacob Rideout
Joe Thornber
Jon Dyte
Kamil Shakirov
Ken Steele
Kouhei Sutou
Laurent Alebarde
Leonardo J. Consoni
Lionel Flandrin
Lourens Naudé
Luca Boccassi
Marc Rossi
Mark Barbisan
Martin Hurton
Martin Lucina
Martin Pales
Martin Sustrik
Matus Hamorsky
Max Wolf
McClain Looney
Michael Compton
Mika Fischer
Mikael Helbo Kjaer
Mike Gatny
Mikko Koppanen
Min Ragan-Kelley
Neale Ferguson
Nir Soffer
Osiris Pedroso
Paul Betts
Paul Colomiets
Pavel Gushcha
Pavol Malosek
Perry Kundert
Peter Bourgon
Philip Kovacs
Pieter Hintjens
Piotr Trojanek
Reza Ebrahimi
Richard Newton
Rik van der Heijden
Robert G. Jakabosky
Sebastian Otaegui
Stefan Radomski
Steven McCoy
Stuart Webster
Tamara Kustarova
Taras Shpot
Tero Marttila
Terry Wilson
Thijs Terlouw
Thomas Rodgers
Tim Mossbarger
Toralf Wittner
Tore Halvorsen
Trevor Bernard
Vitaly Mayatskikh

Credits
=======

Aamir Mohammad
Adrian von Bidder
Aleksey Yeschenko
Alessio Spadaro
Alexander Majorov
Anh Vu
Bernd Schumacher
Brian Granger
Carsten Dinkelmann
David Bahi
Dirk Eddelbuettel
Evgueny Khartchenko
Frank Vanden Berghen
Ian Barber
John Apps
Markus Fischer
Matt Muggeridge
Michael Santy
Oleg Sevostyanov
Paulo Henrique Silva
Peter Busser
Peter Lemenkov
Robert Zhang
Toralf Wittner
Zed Shaw

                  GNU LESSER GENERAL PUBLIC LICENSE
                       Version 3, 29 June 2007

 Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>
 Everyone is permitted to copy and distribute verbatim copies
 of this license document, but changing it is not allowed.


  This version of the GNU Lesser General Public License incorporates
the terms and conditions of version 3 of the GNU General Public
License, supplemented by the additional permissions listed below.

  0. Additional Definitions.

  As used herein, "this License" refers to version 3 of the GNU Lesser
General Public License, and the "GNU GPL" refers to version 3 of the GNU
General Public License.

  "The Library" refers to a covered work governed by this License,
other than an Application or a Combined Work as defined below.

  An "Application" is any work that makes use of an interface provided
by the Library, but which is not otherwise based on the Library.
Defining a subclass of a class defined by the Library is deemed a mode
of using an interface provided by the Library.

  A "Combined Work" is a work produced by combining or linking an
Application with the Library.  The particular version of the Library
with which the Combined Work was made is also called the "Linked
Version".

  The "Minimal Corresponding Source" for a Combined Work means the
Corresponding Source for the Combined Work, excluding any source code
for portions of the Combined Work that, considered in isolation, are
based on the Application, and not on the Linked Version.

  The "Corresponding Application Code" for a Combined Work means the
object code and/or source code for the Application, including any data
and utility programs needed for reproducing the Combined Work from the
Application, but excluding the System Libraries of the Combined Work.

  1. Exception to Section 3 of the GNU GPL.

  You may convey a covered work under sections 3 and 4 of this License
without being bound by section 3 of the GNU GPL.

  2. Conveying Modified Versions.

  If you modify a copy of the Library, and, in your modifications, a
facility refers to a function or data to be supplied by an Application
that uses the facility (other than as an argument passed when the
facility is invoked), then you may convey a copy of the modified
version:

   a) under this License, provided that you make a good faith effort to
   ensure that, in the event an Application does not supply the
   function or data, the facility still operates, and performs
   whatever part of its purpose remains meaningful, or

   b) under the GNU GPL, with none of the additional permissions of
   this License applicable to that copy.

  3. Object Code Incorporating Material from Library Header Files.

  The object code form of an Application may incorporate material from
a header file that is part of the Library.  You may convey such object
code under terms of your choice, provided that, if the incorporated
material is not limited to numerical parameters, data structure
layouts and accessors, or small macros, inline functions and templates
(ten or fewer lines in length), you do both of the following:

   a) Give prominent notice with each copy of the object code that the
   Library is used in it and that the Library and its use are
   covered by this License.

   b) Accompany the object code with a copy of the GNU GPL and this license
   document.

  4. Combined Works.

  You may convey a Combined Work under terms of your choice that,
taken together, effectively do not restrict modification of the
portions of the Library contained in the Combined Work and reverse
engineering for debugging such modifications, if you also do each of
the following:

   a) Give prominent notice with each copy of the Combined Work that
   the Library is used in it and that the Library and its use are
   covered by this License.

   b) Accompany the Combined Work with a copy of the GNU GPL and this license
   document.

   c) For a Combined Work that displays copyright notices during
   execution, include the copyright notice for the Library among
   these notices, as well as a reference directing the user to the
   copies of the GNU GPL and this license document.

   d) Do one of the following:

       0) Convey the Minimal Corresponding Source under the terms of this
       License, and the Corresponding Application Code in a form
       suitable for, and under terms that permit, the user to
       recombine or relink the Application with a modified version of
       the Linked Version to produce a modified Combined Work, in the
       manner specified by section 6 of the GNU GPL for conveying
       Corresponding Source.

       1) Use a suitable shared library mechanism for linking with the
       Library.  A suitable mechanism is one that (a) uses at run time
       a copy of the Library already present on the user's computer
       system, and (b) will operate properly with a modified version
       of the Library that is interface-compatible with the Linked
       Version.

   e) Provide Installation Information, but only if you would otherwise
   be required to provide such information under section 6 of the
   GNU GPL, and only to the extent that such information is
   necessary to install and execute a modified version of the
   Combined Work produced by recombining or relinking the
   Application with a modified version of the Linked Version. (If
   you use option 4d0, the Installation Information must accompany
   the Minimal Corresponding Source and Corresponding Application
   Code. If you use option 4d1, you must provide the Installation
   Information in the manner specified by section 6 of the GNU GPL
   for conveying Corresponding Source.)

  5. Combined Libraries.

  You may place library facilities that are a work based on the
Library side by side in a single library together with other library
facilities that are not Applications and are not covered by this
License, and convey such a combined library under terms of your
choice, if you do both of the following:

   a) Accompany the combined library with a copy of the same work based
   on the Library, uncombined with any other library facilities,
   conveyed under the terms of this License.

   b) Give prominent notice with the combined library that part of it
   is a work based on the Library, and explaining where to find the
   accompanying uncombined form of the same work.

  6. Revised Versions of the GNU Lesser General Public License.

  The Free Software Foundation may publish revised and/or new versions
of the GNU Lesser General Public License from time to time. Such new
versions will be similar in spirit to the present version, but may
differ in detail to address new problems or concerns.

  Each version is given a distinguishing version number. If the
Library as you received it specifies that a certain numbered version
of the GNU Lesser General Public License "or any later version"
applies to it, you have the option of following the terms and
conditions either of that published version or of any later version
published by the Free Software Foundation. If the Library as you
received it does not specify a version number of the GNU Lesser
General Public License, you may choose any version of the GNU Lesser
General Public License ever published by the Free Software Foundation.

  If the Library as you received it specifies that a proxy can decide
whether future versions of the GNU Lesser General Public License shall
apply, that proxy's public statement of acceptance of any version is
permanent authorization for you to choose that version for the
Library.

--------------------------------------------------------------------------------

           SPECIAL EXCEPTION GRANTED BY COPYRIGHT HOLDERS

As a special exception, copyright holders give you permission to link this
library with independent modules to produce an executable, regardless of
the license terms of these independent modules, and to copy and distribute
the resulting executable under terms of your choice, provided that you also
meet, for each linked independent module, the terms and conditions of
the license of that module. An independent module is a module which is not
derived from or based on this library. If you modify this library, you must
extend this exception to your version of the library.

Note: this exception relieves you of any obligations under sections 4 and 5
of this license, and section 6 of the GNU General Public License.

-------------------------------------------------------------------------------

4. IOZone* Filesystem Benchmark

  Copyright 1991, 1992, 1994, 1998, 1999, 2002   William D. Norcott

  License to freely use and distribute this software is hereby granted
  by the author, subject to the condition that this copyright notice
  remains intact.  The author retains the exclusive right to publish
  derivative works based on this work, including, but not limited to,
  revised versions of this work.


  THIS SOFTWARE IS PROVIDED BY DON CAPPS AND THE IOZONE CREW "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  PARTICULAR PURPOSE ARE DISCLAIMED.

  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY
  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
  IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE.

-------------------------------------------------------------------------------

5. STREAM* Copyright 1991-2003: John D. McCalpin

License:
1. You are free to use this program and/or to redistribute
this program.
2. You are free to modify this program for your own use,
including commercial use, subject to the publication
restrictions in item 3.
3. You are free to publish results obtained from running this
program, or from works that you derive from this program,
with the following limitations:
(a) In order to be referred to as "STREAM benchmark
results", published results must be in conformance to
the STREAM Run Rules, (briefly reviewed below)
published at
http://www.cs.virginia.edu/stream/ref.html and
incorporated herein by reference. As the copyright
holder, John McCalpin retains the right to determine
conformity with the Run Rules.
(b) Results based on modified source code or on runs not
in accordance with the STREAM Run Rules must be
clearly labelled whenever they are published. Examples
of proper labelling include: "tuned STREAM benchmark
results" "based on a variant of the STREAM benchmark
code" Other comparable, clear and reasonable labelling
is acceptable.

-------------------------------------------------------------------------------

6. libxml2* is licensed under the MIT License.

   Except where otherwise noted in the source code (e.g. the files
   hash.c, list.c and the trio files, which are covered by a
   similar licence but with different Copyright notices) all the
   files are:
   Copyright (C) 1998-2012 Daniel Veillard. All Rights Reserved.

The MIT License

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or
sell copies of the Software, and to permit persons to whom the
Software is fur- nished to do so, subject to the following
conditions:
The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FIT- NESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.

-------------------------------------------------------------------------------

7. CZMQ* - High-level C binding for 0MQ
==============================

Copyright (c) 1991-2014 iMatix Corporation
Copyright (c) 2014-2016 Brocade Communications Systems Inc.

Contributors
============

Pieter Hintjens
Uli Köhler
KIU Shueng Chuan
Brian Knox
Felipe cruz
Chris Laws
AJ Lewis
Shannen Saez
Kevin Sapper
Michael Haberler
Momo the Monster
Stephen Hemminger
Felipe Cruz
Matt Connolly
Steven McCoy
Timothee "TTimo" Besset
evoskuil
Javier Lopez
Lourens Naude
Shane Hubred
TJ Holowaychuk
William Roberts
Mikko Koppanen
HughPowell
Akira Kitada
Amir Taaki
Apostolis Xekoukoulotakis
James Tucker
Juan López Rubio
Martin Hurton
Augusto Henrique Hentz
Bruno D. Rodrigues
Bulat Shakirzyanov
Dan Colish
Dongmin Yu
Gavin
Jason Ziglar
Kaustubh Rawoorkar
Luc Heinrich
MilfordTea
Timothee Besset
jpulver
woldan
Patrick Noffke
Brandon Ehle
Mike Gatny
Chris Busbey
Goswin von Brederlow
Svein L. Ellingsen
oikosdev
J. Ritchie Carroll
Patrik Wenger
Luca Boccassi
Kouhei Sutou
Michal Vyskocil
Jim Klimov
Michal Hrusecky
Alena Chernikava
Stephen Procter
Wes Young

Mozilla Public License Version 2.0
==================================

1. Definitions
--------------

1.1. "Contributor"
    means each individual or legal entity that creates, contributes to
    the creation of, or owns Covered Software.

1.2. "Contributor Version"
    means the combination of the Contributions of others (if any) used
    by a Contributor and that particular Contributor's Contribution.

1.3. "Contribution"
    means Covered Software of a particular Contributor.

1.4. "Covered Software"
    means Source Code Form to which the initial Contributor has attached
    the notice in Exhibit A, the Executable Form of such Source Code
    Form, and Modifications of such Source Code Form, in each case
    including portions thereof.

1.5. "Incompatible With Secondary Licenses"
    means

    (a) that the initial Contributor has attached the notice described
        in Exhibit B to the Covered Software; or

    (b) that the Covered Software was made available under the terms of
        version 1.1 or earlier of the License, but not also under the
        terms of a Secondary License.

1.6. "Executable Form"
    means any form of the work other than Source Code Form.

1.7. "Larger Work"
    means a work that combines Covered Software with other material, in
    a separate file or files, that is not Covered Software.

1.8. "License"
    means this document.

1.9. "Licensable"
    means having the right to grant, to the maximum extent possible,
    whether at the time of the initial grant or subsequently, any and
    all of the rights conveyed by this License.

1.10. "Modifications"
    means any of the following:

    (a) any file in Source Code Form that results from an addition to,
        deletion from, or modification of the contents of Covered
        Software; or

    (b) any new file in Source Code Form that contains any Covered
        Software.

1.11. "Patent Claims" of a Contributor
    means any patent claim(s), including without limitation, method,
    process, and apparatus claims, in any patent Licensable by such
    Contributor that would be infringed, but for the grant of the
    License, by the making, using, selling, offering for sale, having
    made, import, or transfer of either its Contributions or its
    Contributor Version.

1.12. "Secondary License"
    means either the GNU General Public License, Version 2.0, the GNU
    Lesser General Public License, Version 2.1, the GNU Affero General
    Public License, Version 3.0, or any later versions of those
    licenses.

1.13. "Source Code Form"
    means the form of the work preferred for making modifications.

1.14. "You" (or "Your")
    means an individual or a legal entity exercising rights under this
    License. For legal entities, "You" includes any entity that
    controls, is controlled by, or is under common control with You. For
    purposes of this definition, "control" means (a) the power, direct
    or indirect, to cause the direction or management of such entity,
    whether by contract or otherwise, or (b) ownership of more than
    fifty percent (50%) of the outstanding shares or beneficial
    ownership of such entity.

2. License Grants and Conditions
--------------------------------

2.1. Grants

Each Contributor hereby grants You a world-wide, royalty-free,
non-exclusive license:

(a) under intellectual property rights (other than patent or trademark)
    Licensable by such Contributor to use, reproduce, make available,
    modify, display, perform, distribute, and otherwise exploit its
    Contributions, either on an unmodified basis, with Modifications, or
    as part of a Larger Work; and

(b) under Patent Claims of such Contributor to make, use, sell, offer
    for sale, have made, import, and otherwise transfer either its
    Contributions or its Contributor Version.

2.2. Effective Date

The licenses granted in Section 2.1 with respect to any Contribution
become effective for each Contribution on the date the Contributor first
distributes such Contribution.

2.3. Limitations on Grant Scope

The licenses granted in this Section 2 are the only rights granted under
this License. No additional rights or licenses will be implied from the
distribution or licensing of Covered Software under this License.
Notwithstanding Section 2.1(b) above, no patent license is granted by a
Contributor:

(a) for any code that a Contributor has removed from Covered Software;
    or

(b) for infringements caused by: (i) Your and any other third party's
    modifications of Covered Software, or (ii) the combination of its
    Contributions with other software (except as part of its Contributor
    Version); or

(c) under Patent Claims infringed by Covered Software in the absence of
    its Contributions.

This License does not grant any rights in the trademarks, service marks,
or logos of any Contributor (except as may be necessary to comply with
the notice requirements in Section 3.4).

2.4. Subsequent Licenses

No Contributor makes additional grants as a result of Your choice to
distribute the Covered Software under a subsequent version of this
License (see Section 10.2) or under the terms of a Secondary License (if
permitted under the terms of Section 3.3).

2.5. Representation

Each Contributor represents that the Contributor believes its
Contributions are its original creation(s) or it has sufficient rights
to grant the rights to its Contributions conveyed by this License.

2.6. Fair Use

This License is not intended to limit any rights You have under
applicable copyright doctrines of fair use, fair dealing, or other
equivalents.

2.7. Conditions

Sections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted
in Section 2.1.

3. Responsibilities
-------------------

3.1. Distribution of Source Form

All distribution of Covered Software in Source Code Form, including any
Modifications that You create or to which You contribute, must be under
the terms of this License. You must inform recipients that the Source
Code Form of the Covered Software is governed by the terms of this
License, and how they can obtain a copy of this License. You may not
attempt to alter or restrict the recipients' rights in the Source Code
Form.

3.2. Distribution of Executable Form

If You distribute Covered Software in Executable Form then:

(a) such Covered Software must also be made available in Source Code
    Form, as described in Section 3.1, and You must inform recipients of
    the Executable Form how they can obtain a copy of such Source Code
    Form by reasonable means in a timely manner, at a charge no more
    than the cost of distribution to the recipient; and

(b) You may distribute such Executable Form under the terms of this
    License, or sublicense it under different terms, provided that the
    license for the Executable Form does not attempt to limit or alter
    the recipients' rights in the Source Code Form under this License.

3.3. Distribution of a Larger Work

You may create and distribute a Larger Work under terms of Your choice,
provided that You also comply with the requirements of this License for
the Covered Software. If the Larger Work is a combination of Covered
Software with a work governed by one or more Secondary Licenses, and the
Covered Software is not Incompatible With Secondary Licenses, this
License permits You to additionally distribute such Covered Software
under the terms of such Secondary License(s), so that the recipient of
the Larger Work may, at their option, further distribute the Covered
Software under the terms of either this License or such Secondary
License(s).

3.4. Notices

You may not remove or alter the substance of any license notices
(including copyright notices, patent notices, disclaimers of warranty,
or limitations of liability) contained within the Source Code Form of
the Covered Software, except that You may alter any license notices to
the extent required to remedy known factual inaccuracies.

3.5. Application of Additional Terms

You may choose to offer, and to charge a fee for, warranty, support,
indemnity or liability obligations to one or more recipients of Covered
Software. However, You may do so only on Your own behalf, and not on
behalf of any Contributor. You must make it absolutely clear that any
such warranty, support, indemnity, or liability obligation is offered by
You alone, and You hereby agree to indemnify every Contributor for any
liability incurred by such Contributor as a result of warranty, support,
indemnity or liability terms You offer. You may include additional
disclaimers of warranty and limitations of liability specific to any
jurisdiction.

4. Inability to Comply Due to Statute or Regulation
---------------------------------------------------

If it is impossible for You to comply with any of the terms of this
License with respect to some or all of the Covered Software due to
statute, judicial order, or regulation then You must: (a) comply with
the terms of this License to the maximum extent possible; and (b)
describe the limitations and the code they affect. Such description must
be placed in a text file included with all distributions of the Covered
Software under this License. Except to the extent prohibited by statute
or regulation, such description must be sufficiently detailed for a
recipient of ordinary skill to be able to understand it.

5. Termination
--------------

5.1. The rights granted under this License will terminate automatically
if You fail to comply with any of its terms. However, if You become
compliant, then the rights granted under this License from a particular
Contributor are reinstated (a) provisionally, unless and until such
Contributor explicitly and finally terminates Your grants, and (b) on an
ongoing basis, if such Contributor fails to notify You of the
non-compliance by some reasonable means prior to 60 days after You have
come back into compliance. Moreover, Your grants from a particular
Contributor are reinstated on an ongoing basis if such Contributor
notifies You of the non-compliance by some reasonable means, this is the
first time You have received notice of non-compliance with this License
from such Contributor, and You become compliant prior to 30 days after
Your receipt of the notice.

5.2. If You initiate litigation against any entity by asserting a patent
infringement claim (excluding declaratory judgment actions,
counter-claims, and cross-claims) alleging that a Contributor Version
directly or indirectly infringes any patent, then the rights granted to
You by any and all Contributors for the Covered Software under Section
2.1 of this License shall terminate.

5.3. In the event of termination under Sections 5.1 or 5.2 above, all
end user license agreements (excluding distributors and resellers) which
have been validly granted by You or Your distributors under this License
prior to termination shall survive termination.

************************************************************************
*                                                                      *
*  6. Disclaimer of Warranty                                           *
*  -------------------------                                           *
*                                                                      *
*  Covered Software is provided under this License on an "as is"       *
*  basis, without warranty of any kind, either expressed, implied, or  *
*  statutory, including, without limitation, warranties that the       *
*  Covered Software is free of defects, merchantable, fit for a        *
*  particular purpose or non-infringing. The entire risk as to the     *
*  quality and performance of the Covered Software is with You.        *
*  Should any Covered Software prove defective in any respect, You     *
*  (not any Contributor) assume the cost of any necessary servicing,   *
*  repair, or correction. This disclaimer of warranty constitutes an   *
*  essential part of this License. No use of any Covered Software is   *
*  authorized under this License except under this disclaimer.         *
*                                                                      *
************************************************************************

************************************************************************
*                                                                      *
*  7. Limitation of Liability                                          *
*  --------------------------                                          *
*                                                                      *
*  Under no circumstances and under no legal theory, whether tort      *
*  (including negligence), contract, or otherwise, shall any           *
*  Contributor, or anyone who distributes Covered Software as          *
*  permitted above, be liable to You for any direct, indirect,         *
*  special, incidental, or consequential damages of any character      *
*  including, without limitation, damages for lost profits, loss of    *
*  goodwill, work stoppage, computer failure or malfunction, or any    *
*  and all other commercial damages or losses, even if such party      *
*  shall have been informed of the possibility of such damages. This   *
*  limitation of liability shall not apply to liability for death or   *
*  personal injury resulting from such party's negligence to the       *
*  extent applicable law prohibits such limitation. Some               *
*  jurisdictions do not allow the exclusion or limitation of           *
*  incidental or consequential damages, so this exclusion and          *
*  limitation may not apply to You.                                    *
*                                                                      *
************************************************************************

8. Litigation
-------------

Any litigation relating to this License may be brought only in the
courts of a jurisdiction where the defendant maintains its principal
place of business and such litigation shall be governed by laws of that
jurisdiction, without reference to its conflict-of-law provisions.
Nothing in this Section shall prevent a party's ability to bring
cross-claims or counter-claims.

9. Miscellaneous
----------------

This License represents the complete agreement concerning the subject
matter hereof. If any provision of this License is held to be
unenforceable, such provision shall be reformed only to the extent
necessary to make it enforceable. Any law or regulation which provides
that the language of a contract shall be construed against the drafter
shall not be used to construe this License against a Contributor.

10. Versions of the License
---------------------------

10.1. New Versions

Mozilla Foundation is the license steward. Except as provided in Section
10.3, no one other than the license steward has the right to modify or
publish new versions of this License. Each version will be given a
distinguishing version number.

10.2. Effect of New Versions

You may distribute the Covered Software under the terms of the version
of the License under which You originally received the Covered Software,
or under the terms of any subsequent version published by the license
steward.

10.3. Modified Versions

If you create software not governed by this License, and you want to
create a new license for such software, you may create and use a
modified version of this License if you rename the license and remove
any references to the name of the license steward (except to note that
such modified license differs from this License).

10.4. Distributing Source Code Form that is Incompatible With Secondary
Licenses

If You choose to distribute Source Code Form that is Incompatible With
Secondary Licenses under the terms of this version of the License, the
notice described in Exhibit B of this License must be attached.

Exhibit A - Source Code Form License Notice
-------------------------------------------

  This Source Code Form is subject to the terms of the Mozilla Public
  License, v. 2.0. If a copy of the MPL was not distributed with this
  file, You can obtain one at http://mozilla.org/MPL/2.0/.

If it is not possible or desirable to put the notice in a particular
file, then You may include the notice in a location (such as a LICENSE
file in a relevant directory) where a recipient would be likely to look
for such a notice.

You may add additional accurate notices of copyright ownership.

Exhibit B - "Incompatible With Secondary Licenses" Notice
---------------------------------------------------------

  This Source Code Form is "Incompatible With Secondary Licenses", as
  defined by the Mozilla Public License, v. 2.0.

-------------------------------------------------------------------------------

8. SQLite*
	 Copyright (c) D. Richard Hipp
	 Copyright (c) Dan Kennedy
	 Copyright (c) Joe Mistachkin

All of the code and documentation in SQLite has been dedicated to the public
domain by the authors. All code authors, and representatives of the companies
they work for, have signed affidavits dedicating their contributions to the public
domain and originals of those signed affidavits are stored in a firesafe at the main
offices of Hwaci. Anyone is free to copy, modify, publish, use, compile, sell, or
distribute the original SQLite code, either in source code form or as a compiled
binary, for any purpose, commercial or non-commercial, and by any means.

-------------------------------------------------------------------------------

9. CLIPS* - C Language Integrated Production System
	 Copyright (c) Gary Riley

CLIPS is public domain and is subject to the following license agreement.
Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, and/or sell copies of
the Software, and to permit persons to whom the Software is
furnished to do so.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE
AUTHORS BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL INDIRECT OR
CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

-------------------------------------------------------------------------------

10. GNU Standard C++ Library / libstdc++*
Copyright(c)

Contributors to GCC
The GCC project would like to thank its many contributors. Without them the
project would not have been nearly as successful as it has been. Any omissions
in this list are accidental. Feel free to contact law@redhat.com or
gerald@pfeifer.com if you have been left out or some of your contributions
are not listed. Please keep this list in alphabetical order.

Analog Devices helped implement the support for complex data types and iterators.
John David Anglin for threading-related fixes and improvements to libstdc++-v3,
and the HP-UX port.
James van Artsdalen wrote the code that makes efficient use of the Intel 80387
register stack.
Abramo and Roberto Bagnara for the SysV68 Motorola 3300 Delta Series port.
Alasdair Baird for various bug fixes.
Giovanni Bajo for analyzing lots of complicated C++ problem reports.
Peter Barada for his work to improve code generation for new ColdFire cores.
Gerald Baumgartner added the signature extension to the C++ front end.
Godmar Back for his Java improvements and encouragement.
Scott Bambrough for help porting the Java compiler.
Wolfgang Bangerth for processing tons of bug reports.
Jon Beniston for his Microsoft Windows port of Java and port to Lattice Mico32.
Daniel Berlin for better DWARF 2 support, faster/better optimizations, improved
alias analysis, plus migrating GCC to Bugzilla.
Geoff Berry for his Java object serialization work and various patches.
David Binderman tests weekly snapshots of GCC trunk against Fedora Rawhide for
several architectures.
Laurynas Biveinis for memory management work and DJGPP port fixes.
Uros Bizjak for the implementation of x87 math built-in functions and for
various middle end and i386 back end improvements and bug fixes.
Eric Blake for helping to make GCJ and libgcj conform to the specifications.
Janne Blomqvist for contributions to GNU Fortran.
Hans-J. Boehm for his garbage collector, IA-64 libffi port, and other Java work.
Segher Boessenkool for helping maintain the PowerPC port and the instruction
combiner plus various contributions to the middle end.
Neil Booth for work on cpplib, lang hooks, debug hooks and other miscellaneous
clean-ups.
Steven Bosscher for integrating the GNU Fortran front end into GCC and for
contributing to the tree-ssa branch.
Eric Botcazou for fixing middle- and backend bugs left and right.
Per Bothner for his direction via the steering committee and various
improvements to the infrastructure for supporting new languages. Chill front
end implementation. Initial implementations of cpplib, fix-header,
config.guess, libio, and past C++ library (libg++) maintainer. Dreaming up,
designing and implementing much of GCJ.
Devon Bowen helped port GCC to the Tahoe.
Don Bowman for mips-vxworks contributions.
James Bowman for the FT32 port.
Dave Brolley for work on cpplib and Chill.
Paul Brook for work on the ARM architecture and maintaining GNU Fortran.
Robert Brown implemented the support for Encore 32000 systems.
Christian Bruel for improvements to local store elimination.
Herman A.J. ten Brugge for various fixes.
Joerg Brunsmann for Java compiler hacking and help with the GCJ FAQ.
Joe Buck for his direction via the steering committee from its creation to 2013.
Iain Buclaw for the D frontend.
Craig Burley for leadership of the G77 Fortran effort.
Tobias Burnus for contributions to GNU Fortran.
Stephan Buys for contributing Doxygen notes for libstdc++.
Paolo Carlini for libstdc++ work: lots of efficiency improvements to the C++
strings, streambufs and formatted I/O, hard detective work on the frustrating
localization issues, and keeping up with the problem reports.
John Carr for his alias work, SPARC hacking, infrastructure improvements,
previous contributions to the steering committee, loop optimizations, etc.
Stephane Carrez for 68HC11 and 68HC12 ports.
Steve Chamberlain for support for the Renesas SH and H8 processors and the
PicoJava processor, and for GCJ config fixes.
Glenn Chambers for help with the GCJ FAQ.
John-Marc Chandonia for various libgcj patches.
Denis Chertykov for contributing and maintaining the AVR port, the first GCC
port for an 8-bit architecture.
Kito Cheng for his work on the RISC-V port, including bringing up the test
suite and maintenance.
Scott Christley for his Objective-C contributions.
Eric Christopher for his Java porting help and clean-ups.
Branko Cibej for more warning contributions.
The GNU Classpath project for all of their merged runtime code.
Nick Clifton for arm, mcore, fr30, v850, m32r, msp430 rx work, --help, and
other random hacking.
Michael Cook for libstdc++ cleanup patches to reduce warnings.
R. Kelley Cook for making GCC buildable from a read-only directory as well as
other miscellaneous build process and documentation clean-ups.
Ralf Corsepius for SH testing and minor bug fixing.
François-Xavier Coudert for contributions to GNU Fortran.
Stan Cox for care and feeding of the x86 port and lots of behind the scenes
hacking.
Alex Crain provided changes for the 3b1.
Ian Dall for major improvements to the NS32k port.
Paul Dale for his work to add uClinux platform support to the m68k backend.
Palmer Dabbelt for his work maintaining the RISC-V port.
Dario Dariol contributed the four varieties of sample programs that print a
copy of their source.
Russell Davidson for fstream and stringstream fixes in libstdc++.
Bud Davis for work on the G77 and GNU Fortran compilers.
Mo DeJong for GCJ and libgcj bug fixes.
Jerry DeLisle for contributions to GNU Fortran.
DJ Delorie for the DJGPP port, build and libiberty maintenance, various bug
fixes, and the M32C, MeP, MSP430, and RL78 ports.
Arnaud Desitter for helping to debug GNU Fortran.
Gabriel Dos Reis for contributions to G++, contributions and maintenance of
GCC diagnostics infrastructure, libstdc++-v3, including valarray<>, complex<>,
maintaining the numerics library (including that pesky <limits> :-) and keeping
up-to-date anything to do with numbers.
Ulrich Drepper for his work on glibc, testing of GCC using glibc, ISO C99
support, CFG dumping support, etc., plus support of the C++ runtime libraries
including for all kinds of C interface issues, contributing and maintaining
complex<>, sanity checking and disbursement, configuration architecture,
libio maintenance, and early math work.
François Dumont for his work on libstdc++-v3, especially maintaining and
improving debug-mode and associative and unordered containers.
Zdenek Dvorak for a new loop unroller and various fixes.
Michael Eager for his work on the Xilinx MicroBlaze port.
Richard Earnshaw for his ongoing work with the ARM.
David Edelsohn for his direction via the steering committee, ongoing work
with the RS6000/PowerPC port, help cleaning up Haifa loop changes, doing the
entire AIX port of libstdc++ with his bare hands, and for ensuring GCC properly
keeps working on AIX.
Kevin Ediger for the floating point formatting of num_put::do_put in libstdc++.
Phil Edwards for libstdc++ work including configuration hackery, documentation
maintainer, chief breaker of the web pages, the occasional iostream bug fix,
and work on shared library symbol versioning.
Paul Eggert for random hacking all over GCC.
Mark Elbrecht for various DJGPP improvements, and for libstdc++ configuration
support for locales and fstream-related fixes.
Vadim Egorov for libstdc++ fixes in strings, streambufs, and iostreams.
Christian Ehrhardt for dealing with bug reports.
Ben Elliston for his work to move the Objective-C runtime into its own
subdirectory and for his work on autoconf.
Revital Eres for work on the PowerPC 750CL port.
Marc Espie for OpenBSD support.
Doug Evans for much of the global optimization framework, arc, m32r, and
SPARC work.
Christopher Faylor for his work on the Cygwin port and for caring and feeding
the gcc.gnu.org box and saving its users tons of spam.
Fred Fish for BeOS support and Ada fixes.
Ivan Fontes Garcia for the Portuguese translation of the GCJ FAQ.
Peter Gerwinski for various bug fixes and the Pascal front end.
Kaveh R. Ghazi for his direction via the steering committee, amazing work to
make ‘-W -Wall -W* -Werror’ useful, and testing GCC on a plethora of platforms.
Kaveh extends his gratitude to the CAIP Center at Rutgers University for
providing him with computing resources to work on Free Software from the late
1980s to 2010.
John Gilmore for a donation to the FSF earmarked improving GNU Java.
Judy Goldberg for c++ contributions.
Torbjorn Granlund for various fixes and the c-torture testsuite, multiply-
and divide-by-constant optimization, improved long long support, improved leaf
function register allocation, and his direction via the steering committee.
Jonny Grant for improvements to collect2's --help documentation.
Anthony Green for his -Os contributions, the moxie port, and Java front end
work.
Stu Grossman for gdb hacking, allowing GCJ developers to debug Java code.
Michael K. Gschwind contributed the port to the PDP-11.
Richard Biener for his ongoing middle-end contributions and bug fixes and for
release management.
Ron Guilmette implemented the protoize and unprotoize tools, the support for
DWARF 1 symbolic debugging information, and much of the support for System V
Release 4. He has also worked heavily on the Intel 386 and 860 support.
Sumanth Gundapaneni for contributing the CR16 port.
Mostafa Hagog for Swing Modulo Scheduling (SMS) and post reload GCSE.
Bruno Haible for improvements in the runtime overhead for EH, new warnings and
assorted bug fixes.
Andrew Haley for his amazing Java compiler and library efforts.
Chris Hanson assisted in making GCC work on HP-UX for the 9000 series 300.
Michael Hayes for various thankless work he’s done trying to get the c30/c40
ports functional. Lots of loop and unroll improvements and fixes.
Dara Hazeghi for wading through myriads of target-specific bug reports.
Kate Hedstrom for staking the G77 folks with an initial testsuite.
Richard Henderson for his ongoing SPARC, alpha, ia32, and ia64 work, loop opts,
and generally fixing lots of old problems we’ve ignored for years, flow
rewrite and lots of further stuff, including reviewing tons of patches.
Aldy Hernandez for working on the PowerPC port, SIMD support, and various fixes.
Nobuyuki Hikichi of Software Research Associates, Tokyo, contributed the
support for the Sony NEWS machine.
Kazu Hirata for caring and feeding the Renesas H8/300 port and various fixes.
Katherine Holcomb for work on GNU Fortran.
Manfred Hollstein for his ongoing work to keep the m88k alive, lots of testing
and bug fixing, particularly of GCC configury code.
Steve Holmgren for MachTen patches.
Mat Hostetter for work on the TILE-Gx and TILEPro ports.
Jan Hubicka for his x86 port improvements.
Falk Hueffner for working on C and optimization bug reports.
Bernardo Innocenti for his m68k work, including merging of ColdFire
improvements and uClinux support.
Christian Iseli for various bug fixes.
Kamil Iskra for general m68k hacking.
Lee Iverson for random fixes and MIPS testing.
Balaji V. Iyer for Cilk+ development and merging.
Andreas Jaeger for testing and benchmarking of GCC and various bug fixes.
Martin Jambor for his work on inter-procedural optimizations, the switch
conversion pass, and scalar replacement of aggregates.
Jakub Jelinek for his SPARC work and sibling call optimizations as well as
lots of bug fixes and test cases, and for improving the Java build system.
Janis Johnson for ia64 testing and fixes, her quality improvement sidetracks,
and web page maintenance.
Kean Johnston for SCO OpenServer support and various fixes.
Tim Josling for the sample language treelang based originally on Richard
Kenner’s “toy” language.
Nicolai Josuttis for additional libstdc++ documentation.
Klaus Kaempf for his ongoing work to make alpha-vms a viable target.
Steven G. Kargl for work on GNU Fortran.
David Kashtan of SRI adapted GCC to VMS.
Ryszard Kabatek for many, many libstdc++ bug fixes and optimizations of
strings, especially member functions, and for auto_ptr fixes.
Geoffrey Keating for his ongoing work to make the PPC work for GNU/Linux and
his automatic regression tester.
Brendan Kehoe for his ongoing work with G++ and for a lot of early work in
just about every part of libstdc++.
Oliver M. Kellogg of Deutsche Aerospace contributed the port to the
MIL-STD-1750A.
Richard Kenner of the New York University Ultracomputer Research Laboratory
wrote the machine descriptions for the AMD 29000, the DEC Alpha, the IBM RT PC,
and the IBM RS/6000 as well as the support for instruction attributes. He
also made changes to better support RISC processors including changes to
common subexpression elimination, strength reduction, function calling
sequence handling, and condition code support, in addition to generalizing
the code for frame pointer elimination and delay slot scheduling. Richard
Kenner was also the head maintainer of GCC for several years.
Mumit Khan for various contributions to the Cygwin and Mingw32 ports and
maintaining binary releases for Microsoft Windows hosts, and for massive
libstdc++ porting work to Cygwin/Mingw32.
Robin Kirkham for cpu32 support.
Mark Klein for PA improvements.
Thomas Koenig for various bug fixes.
Bruce Korb for the new and improved fixincludes code.
Benjamin Kosnik for his G++ work and for leading the libstdc++-v3 effort.
Maxim Kuvyrkov for contributions to the instruction scheduler, the Android and
m68k/Coldfire ports, and optimizations.
Charles LaBrec contributed the support for the Integrated Solutions 68020
system.
Asher Langton and Mike Kumbera for contributing Cray pointer support to GNU
Fortran, and for other GNU Fortran improvements.
Jeff Law for his direction via the steering committee, coordinating the entire
egcs project and GCC 2.95, rolling out snapshots and releases, handling merges
from GCC2, reviewing tons of patches that might have fallen through the cracks
else, and random but extensive hacking.
Walter Lee for work on the TILE-Gx and TILEPro ports.
Marc Lehmann for his direction via the steering committee and helping with
analysis and improvements of x86 performance.
Victor Leikehman for work on GNU Fortran.
Ted Lemon wrote parts of the RTL reader and printer.
Kriang Lerdsuwanakij for C++ improvements including template as template
parameter support, and many C++ fixes.
Warren Levy for tremendous work on libgcj (Java Runtime Library) and random
work on the Java front end.
Alain Lichnewsky ported GCC to the MIPS CPU.
Oskar Liljeblad for hacking on AWT and his many Java bug reports and patches.
Robert Lipe for OpenServer support, new testsuites, testing, etc.
Chen Liqin for various S+core related fixes/improvement, and for maintaining
the S+core port.
Martin Liska for his work on identical code folding, the sanitizers, HSA,
general bug fixing and for running automated regression testing of GCC and
reporting numerous bugs.
Weiwen Liu for testing and various bug fixes.
Manuel López-Ibáñez for improving -Wconversion and many other diagnostics fixes
and improvements.
Dave Love for his ongoing work with the Fortran front end and runtime libraries.
Martin von Löwis for internal consistency checking infrastructure, various C++
improvements including namespace support, and tons of assistance with
libstdc++/compiler merges.
H.J. Lu for his previous contributions to the steering committee, many x86 bug
reports, prototype patches, and keeping the GNU/Linux ports working.
Greg McGary for random fixes and (someday) bounded pointers.
Andrew MacLeod for his ongoing work in building a real EH system, various code
generation improvements, work on the global optimizer, etc.
Vladimir Makarov for hacking some ugly i960 problems, PowerPC hacking
improvements to compile-time performance, overall knowledge and direction in
the area of instruction scheduling, design and implementation of the automaton
based instruction scheduler and design and implementation of the integrated and
local register allocators.
David Malcolm for his work on improving GCC diagnostics, JIT, self-tests and
unit testing.
Bob Manson for his behind the scenes work on dejagnu.
John Marino for contributing the DragonFly BSD port.
Philip Martin for lots of libstdc++ string and vector iterator fixes and
improvements, and string clean up and testsuites.
Michael Matz for his work on dominance tree discovery, the x86-64 port,
link-time optimization framework and general optimization improvements.
All of the Mauve project contributors for Java test code.
Bryce McKinlay for numerous GCJ and libgcj fixes and improvements.
Adam Megacz for his work on the Microsoft Windows port of GCJ.
Michael Meissner for LRS framework, ia32, m32r, v850, m88k, MIPS, powerpc,
haifa, ECOFF debug support, and other assorted hacking.
Jason Merrill for his direction via the steering committee and leading the G++
effort.
Martin Michlmayr for testing GCC on several architectures using the entire
Debian archive.
David Miller for his direction via the steering committee, lots of SPARC work,
improvements in jump.c and interfacing with the Linux kernel developers.
Gary Miller ported GCC to Charles River Data Systems machines.
Alfred Minarik for libstdc++ string and ios bug fixes, and turning the entire
libstdc++ testsuite namespace-compatible.
Mark Mitchell for his direction via the steering committee, mountains of C++
work, load/store hoisting out of loops, alias analysis improvements, ISO C
restrict support, and serving as release manager from 2000 to 2011.
Alan Modra for various GNU/Linux bits and testing.
Toon Moene for his direction via the steering committee, Fortran maintenance,
and his ongoing work to make us make Fortran run fast.
Jason Molenda for major help in the care and feeding of all the services on the
gcc.gnu.org (formerly egcs.cygnus.com) machine—mail, web services, ftp
services, etc etc. Doing all this work on scrap paper and the backs of
envelopes would have been… difficult.
Catherine Moore for fixing various ugly problems we have sent her way,
including the haifa bug which was killing the Alpha & PowerPC Linux kernels.
Mike Moreton for his various Java patches.
David Mosberger-Tang for various Alpha improvements, and for the initial IA-64
port.
Stephen Moshier contributed the floating point emulator that assists in
cross-compilation and permits support for floating point numbers wider than
64 bits and for ISO C99 support.
Bill Moyer for his behind the scenes work on various issues.
Philippe De Muyter for his work on the m68k port.
Joseph S. Myers for his work on the PDP-11 port, format checking and ISO C99
support, and continuous emphasis on (and contributions to) documentation.
Nathan Myers for his work on libstdc++-v3: architecture and authorship through
the first three snapshots, including implementation of locale infrastructure,
string, shadow C headers, and the initial project documentation (DESIGN,
CHECKLIST, and so forth). Later, more work on MT-safe string and shadow
headers.
Felix Natter for documentation on porting libstdc++.
Nathanael Nerode for cleaning up the configuration/build process.
NeXT, Inc. donated the front end that supports the Objective-C language.
Hans-Peter Nilsson for the CRIS and MMIX ports, improvements to the search
engine setup, various documentation fixes and other small fixes.
Geoff Noer for his work on getting cygwin native builds working.
Vegard Nossum for running automated regression testing of GCC and reporting
numerous bugs.
Diego Novillo for his work on Tree SSA, OpenMP, SPEC performance tracking web
pages, GIMPLE tuples, and assorted fixes.
David O’Brien for the FreeBSD/alpha, FreeBSD/AMD x86-64, FreeBSD/ARM,
FreeBSD/PowerPC, and FreeBSD/SPARC64 ports and related infrastructure
improvements.
Alexandre Oliva for various build infrastructure improvements, scripts and
amazing testing work, including keeping libtool issues sane and happy.
Stefan Olsson for work on mt_alloc.
Melissa O’Neill for various NeXT fixes.
Rainer Orth for random MIPS work, including improvements to GCC’s o32 ABI
support, improvements to dejagnu’s MIPS support, Java configuration clean-ups
and porting work, and maintaining the IRIX, Solaris 2, and Tru64 UNIX ports.
Steven Pemberton for his contribution of enquire which allowed GCC to determine
various properties of the floating point unit and generate float.h in older
versions of GCC.
Hartmut Penner for work on the s390 port.
Paul Petersen wrote the machine description for the Alliant FX/8.
Alexandre Petit-Bianco for implementing much of the Java compiler and
continued Java maintainership.
Matthias Pfaller for major improvements to the NS32k port.
Gerald Pfeifer for his direction via the steering committee, pointing out lots
of problems we need to solve, maintenance of the web pages, and taking care of
documentation maintenance in general.
Marek Polacek for his work on the C front end, the sanitizers and general bug
fixing.
Andrew Pinski for processing bug reports by the dozen.
Ovidiu Predescu for his work on the Objective-C front end and runtime
libraries.
Jerry Quinn for major performance improvements in C++ formatted I/O.
Ken Raeburn for various improvements to checker, MIPS ports and various
cleanups in the compiler.
Rolf W. Rasmussen for hacking on AWT.
David Reese of Sun Microsystems contributed to the Solaris on PowerPC port.
John Regehr for running automated regression testing of GCC and reporting
numerous bugs.
Volker Reichelt for running automated regression testing of GCC and reporting
numerous bugs and for keeping up with the problem reports.
Joern Rennecke for maintaining the sh port, loop, regmove & reload hacking and
developing and maintaining the Epiphany port.
Loren J. Rittle for improvements to libstdc++-v3 including the FreeBSD port,
threading fixes, thread-related configury changes, critical threading
documentation, and solutions to really tricky I/O problems, as well as keeping
GCC properly working on FreeBSD and continuous testing.
Craig Rodrigues for processing tons of bug reports.
Ola Rönnerup for work on mt_alloc.
Gavin Romig-Koch for lots of behind the scenes MIPS work.
David Ronis inspired and encouraged Craig to rewrite the G77 documentation in
texinfo format by contributing a first pass at a translation of the old
g77-0.5.16/f/DOC file.
Ken Rose for fixes to GCC’s delay slot filling code.
Ira Rosen for her contributions to the auto-vectorizer.
Paul Rubin wrote most of the preprocessor.
Pétur Runólfsson for major performance improvements in C++ formatted I/O and
large file support in C++ filebuf.
Chip Salzenberg for libstdc++ patches and improvements to locales, traits,
Makefiles, libio, libtool hackery, and “long long” support.
Juha Sarlin for improvements to the H8 code generator.
Greg Satz assisted in making GCC work on HP-UX for the 9000 series 300.
Roger Sayle for improvements to constant folding and GCC’s RTL optimizers as
well as for fixing numerous bugs.
Bradley Schatz for his work on the GCJ FAQ.
Peter Schauer wrote the code to allow debugging to work on the Alpha.
William Schelter did most of the work on the Intel 80386 support.
Tobias Schlüter for work on GNU Fortran.
Bernd Schmidt for various code generation improvements and major work in the
reload pass, serving as release manager for GCC 2.95.3, and work on the
Blackfin and C6X ports.
Peter Schmid for constant testing of libstdc++—especially application testing,
going above and beyond what was requested for the release criteria—and
libstdc++ header file tweaks.
Jason Schroeder for jcf-dump patches.
Andreas Schwab for his work on the m68k port.
Lars Segerlund for work on GNU Fortran.
Dodji Seketeli for numerous C++ bug fixes and debug info improvements.
Tim Shen for major work on <regex>.
Joel Sherrill for his direction via the steering committee, RTEMS contributions
and RTEMS testing.
Nathan Sidwell for many C++ fixes/improvements.
Jeffrey Siegal for helping RMS with the original design of GCC, some code which
handles the parse tree and RTL data structures, constant folding and help with
the original VAX & m68k ports.
Kenny Simpson for prompting libstdc++ fixes due to defect reports from the LWG
(thereby keeping GCC in line with updates from the ISO).
Franz Sirl for his ongoing work with making the PPC port stable for GNU/Linux.
Andrey Slepuhin for assorted AIX hacking.
Trevor Smigiel for contributing the SPU port.
Christopher Smith did the port for Convex machines.
Danny Smith for his major efforts on the Mingw (and Cygwin) ports. Retired from
GCC maintainership August 2010, having mentored two new maintainers into the
role.
Randy Smith finished the Sun FPA support.
Ed Smith-Rowland for his continuous work on libstdc++-v3, special functions,
<random>, and various improvements to C++11 features.
Scott Snyder for queue, iterator, istream, and string fixes and libstdc++
testsuite entries. Also for providing the patch to G77 to add rudimentary
support for INTEGER*1, INTEGER*2, and LOGICAL*1.
Zdenek Sojka for running automated regression testing of GCC and reporting
numerous bugs.
Arseny Solokha for running automated regression testing of GCC and reporting
numerous bugs.
Jayant Sonar for contributing the CR16 port.
Brad Spencer for contributions to the GLIBCPP_FORCE_NEW technique.
Richard Stallman, for writing the original GCC and launching the GNU project.
Jan Stein of the Chalmers Computer Society provided support for Genix, as well
as part of the 32000 machine description.
Gerhard Steinmetz for running automated regression testing of GCC and reporting
numerous bugs.
Nigel Stephens for various mips16 related fixes/improvements.
Jonathan Stone wrote the machine description for the Pyramid computer.
Graham Stott for various infrastructure improvements.
John Stracke for his Java HTTP protocol fixes.
Mike Stump for his Elxsi port, G++ contributions over the years and more
recently his vxworks contributions
Jeff Sturm for Java porting help, bug fixes, and encouragement.
Zhendong Su for running automated regression testing of GCC and reporting
numerous bugs.
Chengnian Sun for running automated regression testing of GCC and reporting
numerous bugs.
Shigeya Suzuki for this fixes for the bsdi platforms.
Ian Lance Taylor for the Go frontend, the initial mips16 and mips64 support,
general configury hacking, fixincludes, etc.
Holger Teutsch provided the support for the Clipper CPU.
Gary Thomas for his ongoing work to make the PPC work for GNU/Linux.
Paul Thomas for contributions to GNU Fortran.
Philipp Thomas for random bug fixes throughout the compiler
Jason Thorpe for thread support in libstdc++ on NetBSD.
Kresten Krab Thorup wrote the run time support for the Objective-C language
and the fantastic Java bytecode interpreter.
Michael Tiemann for random bug fixes, the first instruction scheduler, initial
C++ support, function integration, NS32k, SPARC and M88k machine description
work, delay slot scheduling.
Andreas Tobler for his work porting libgcj to Darwin.
Teemu Torma for thread safe exception handling support.
Leonard Tower wrote parts of the parser, RTL generator, and RTL definitions,
and of the VAX machine description.
Daniel Towner and Hariharan Sandanagobalane contributed and maintain the
picoChip port.
Tom Tromey for internationalization support and for his many Java contributions
and libgcj maintainership.
Lassi Tuura for improvements to config.guess to determine HP processor types.
Petter Urkedal for libstdc++ CXXFLAGS, math, and algorithms fixes.
Andy Vaught for the design and initial implementation of the GNU Fortran front
end.
Brent Verner for work with the libstdc++ cshadow files and their associated
configure steps.
Todd Vierling for contributions for NetBSD ports.
Andrew Waterman for contributing the RISC-V port, as well as maintaining it.
Jonathan Wakely for contributing libstdc++ Doxygen notes and XHTML guidance
and maintaining libstdc++.
Dean Wakerley for converting the install documentation from HTML to texinfo
in time for GCC 3.0.
Krister Walfridsson for random bug fixes.
Feng Wang for contributions to GNU Fortran.
Stephen M. Webb for time and effort on making libstdc++ shadow files work
with the tricky Solaris 8+ headers, and for pushing the build-time header
tree. Also, for starting and driving the <regex> effort.
John Wehle for various improvements for the x86 code generator, related
infrastructure improvements to help x86 code generation, value range
propagation and other work, WE32k port.
Ulrich Weigand for work on the s390 port.
Janus Weil for contributions to GNU Fortran.
Zack Weinberg for major work on cpplib and various other bug fixes.
Matt Welsh for help with Linux Threads support in GCJ.
Urban Widmark for help fixing java.io.
Mark Wielaard for new Java library code and his work integrating with
Classpath.
Dale Wiles helped port GCC to the Tahoe.
Bob Wilson from Tensilica, Inc. for the Xtensa port.
Jim Wilson for his direction via the steering committee, tackling hard
problems in various places that nobody else wanted to work on, strength
reduction and other loop optimizations.
Paul Woegerer and Tal Agmon for the CRX port.
Carlo Wood for various fixes.
Tom Wood for work on the m88k port.
Chung-Ju Wu for his work on the Andes NDS32 port.
Canqun Yang for work on GNU Fortran.
Masanobu Yuhara of Fujitsu Laboratories implemented the machine description
for the Tron architecture (specifically, the Gmicro).
Kevin Zachmann helped port GCC to the Tahoe.
Ayal Zaks for Swing Modulo Scheduling (SMS).
Qirun Zhang for running automated regression testing of GCC and reporting
numerous bugs.
Xiaoqiang Zhang for work on GNU Fortran.
Gilles Zunino for help porting Java to Irix.

The following people are recognized for their contributions to GNAT, the
Ada front end of GCC:

Bernard Banner
Romain Berrendonner
Geert Bosch
Emmanuel Briot
Joel Brobecker
Ben Brosgol
Vincent Celier
Arnaud Charlet
Chien Chieng
Cyrille Comar
Cyrille Crozes
Robert Dewar
Gary Dismukes
Robert Duff
Ed Falis
Ramon Fernandez
Sam Figueroa
Vasiliy Fofanov
Michael Friess
Franco Gasperoni
Ted Giering
Matthew Gingell
Laurent Guerby
Jerome Guitton
Olivier Hainque
Jerome Hugues
Hristian Kirtchev
Jerome Lambourg
Bruno Leclerc
Albert Lee
Sean McNeil
Javier Miranda
Laurent Nana
Pascal Obry
Dong-Ik Oh
Laurent Pautet
Brett Porter
Thomas Quinot
Nicolas Roche
Pat Rogers
Jose Ruiz
Douglas Rupp
Sergey Rybin
Gail Schenker
Ed Schonberg
Nicolas Setton
Samuel Tardieu

The following people are recognized for their contributions of new features,
bug reports, testing and integration of classpath/libgcj for GCC version 4.1:

Lillian Angel for JTree implementation and lots Free Swing additions and bug
fixes.
Wolfgang Baer for GapContent bug fixes.
Anthony Balkissoon for JList, Free Swing 1.5 updates and mouse event fixes,
lots of Free Swing work including JTable editing.
Stuart Ballard for RMI constant fixes.
Goffredo Baroncelli for HTTPURLConnection fixes.
Gary Benson for MessageFormat fixes.
Daniel Bonniot for Serialization fixes.
Chris Burdess for lots of gnu.xml and http protocol fixes, StAX and DOM xml:id
support.
Ka-Hing Cheung for TreePath and TreeSelection fixes.
Archie Cobbs for build fixes, VM interface updates, URLClassLoader updates.
Kelley Cook for build fixes.
Martin Cordova for Suggestions for better SocketTimeoutException.
David Daney for BitSet bug fixes, HttpURLConnection rewrite and improvements.
Thomas Fitzsimmons for lots of upgrades to the gtk+ AWT and Cairo 2D support.
Lots of imageio framework additions, lots of AWT and Free Swing bug fixes.
Jeroen Frijters for ClassLoader and nio cleanups, serialization fixes, better
Proxy support, bug fixes and IKVM integration.
Santiago Gala for AccessControlContext fixes.
Nicolas Geoffray for VMClassLoader and AccessController improvements.
David Gilbert for basic and metal icon and plaf support and lots of
documenting, Lots of Free Swing and metal theme additions. MetalIconFactory
implementation.
Anthony Green for MIDI framework, ALSA and DSSI providers.
Andrew Haley for Serialization and URLClassLoader fixes, gcj build speedups.
Kim Ho for JFileChooser implementation.
Andrew John Hughes for Locale and net fixes, URI RFC2986 updates, Serialization
fixes, Properties XML support and generic branch work, VMIntegration guide update.
Bastiaan Huisman for TimeZone bug fixing.
Andreas Jaeger for mprec updates.
Paul Jenner for better -Werror support.
Ito Kazumitsu for NetworkInterface implementation and updates.
Roman Kennke for BoxLayout, GrayFilter and SplitPane, plus bug fixes all over.
Lots of Free Swing work including styled text.
Simon Kitching for String cleanups and optimization suggestions.
Michael Koch for configuration fixes, Locale updates, bug and build fixes.
Guilhem Lavaux for configuration, thread and channel fixes and Kaffe
integration. JCL native Pointer updates. Logger bug fixes.
David Lichteblau for JCL support library global/local reference cleanups.
Aaron Luchko for JDWP updates and documentation fixes.
Ziga Mahkovec for Graphics2D upgraded to Cairo 0.5 and new regex features.
Sven de Marothy for BMP imageio support, CSS and TextLayout fixes. GtkImage
rewrite, 2D, awt, free swing and date/time fixes and implementing the Qt4
peers.
Casey Marshall for crypto algorithm fixes, FileChannel lock, SystemLogger and
FileHandler rotate implementations, NIO FileChannel.map support, security and
policy updates.
Bryce McKinlay for RMI work.
Audrius Meskauskas for lots of Free Corba, RMI and HTML work plus testing and
documenting.
Kalle Olavi Niemitalo for build fixes.
Rainer Orth for build fixes.
Andrew Overholt for File locking fixes.
Ingo Proetel for Image, Logger and URLClassLoader updates.
Olga Rodimina for MenuSelectionManager implementation.
Jan Roehrich for BasicTreeUI and JTree fixes.
Julian Scheid for documentation updates and gjdoc support.
Christian Schlichtherle for zip fixes and cleanups.
Robert Schuster for documentation updates and beans fixes, TreeNode
enumerations and ActionCommand and various fixes, XML and URL, AWT and Free
Swing bug fixes.
Keith Seitz for lots of JDWP work.
Christian Thalinger for 64-bit cleanups, Configuration and VM interface fixes
and CACAO integration, fdlibm updates.
Gael Thomas for VMClassLoader boot packages support suggestions.
Andreas Tobler for Darwin and Solaris testing and fixing, Qt4 support for
Darwin/OS X, Graphics2D support, gtk+ updates.
Dalibor Topic for better DEBUG support, build cleanups and Kaffe integration.
Qt4 build infrastructure, SHA1PRNG and GdkPixbugDecoder updates.
Tom Tromey for Eclipse integration, generics work, lots of bug fixes and gcj
integration including coordinating The Big Merge.
Mark Wielaard for bug fixes, packaging and release management, Clipboard
implementation, system call interrupts and network timeouts and
GdkPixpufDecoder fixes.

In addition to the above, all of which also contributed time and energy in
testing GCC, we would like to thank the following for their contributions to
testing:

Michael Abd-El-Malek
Thomas Arend
Bonzo Armstrong
Steven Ashe
Chris Baldwin
David Billinghurst
Jim Blandy
Stephane Bortzmeyer
Horst von Brand
Frank Braun
Rodney Brown
Sidney Cadot
Bradford Castalia
Robert Clark
Jonathan Corbet
Ralph Doncaster
Richard Emberson
Levente Farkas
Graham Fawcett
Mark Fernyhough
Robert A. French
Jörgen Freyh
Mark K. Gardner
Charles-Antoine Gauthier
Yung Shing Gene
David Gilbert
Simon Gornall
Fred Gray
John Griffin
Patrik Hagglund
Phil Hargett
Amancio Hasty
Takafumi Hayashi
Bryan W. Headley
Kevin B. Hendricks
Joep Jansen
Christian Joensson
Michel Kern
David Kidd
Tobias Kuipers
Anand Krishnaswamy
A. O. V. Le Blanc
llewelly
Damon Love
Brad Lucier
Matthias Klose
Martin Knoblauch
Rick Lutowski
Jesse Macnish
Stefan Morrell
Anon A. Mous
Matthias Mueller
Pekka Nikander
Rick Niles
Jon Olson
Magnus Persson
Chris Pollard
Richard Polton
Derk Reefman
David Rees
Paul Reilly
Tom Reilly
Torsten Rueger
Danny Sadinoff
Marc Schifer
Erik Schnetter
Wayne K. Schroll
David Schuler
Vin Shelton
Tim Souder
Adam Sulmicki
Bill Thorson
George Talbot
Pedro A. M. Vazquez
Gregory Warnes
Ian Watson
David E. Young
And many others

And finally we’d like to thank everyone who uses the compiler, provides
feedback and generally reminds us why we’re doing this work in the first place.

                    GNU GENERAL PUBLIC LICENSE
                       Version 3, 29 June 2007

 Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>
 Everyone is permitted to copy and distribute verbatim copies
 of this license document, but changing it is not allowed.

                            Preamble

  The GNU General Public License is a free, copyleft license for
software and other kinds of works.

  The licenses for most software and other practical works are designed
to take away your freedom to share and change the works.  By contrast,
the GNU General Public License is intended to guarantee your freedom to
share and change all versions of a program--to make sure it remains free
software for all its users.  We, the Free Software Foundation, use the
GNU General Public License for most of our software; it applies also to
any other work released this way by its authors.  You can apply it to
your programs, too.

  When we speak of free software, we are referring to freedom, not
price.  Our General Public Licenses are designed to make sure that you
have the freedom to distribute copies of free software (and charge for
them if you wish), that you receive source code or can get it if you
want it, that you can change the software or use pieces of it in new
free programs, and that you know you can do these things.

  To protect your rights, we need to prevent others from denying you
these rights or asking you to surrender the rights.  Therefore, you have
certain responsibilities if you distribute copies of the software, or if
you modify it: responsibilities to respect the freedom of others.

  For example, if you distribute copies of such a program, whether
gratis or for a fee, you must pass on to the recipients the same
freedoms that you received.  You must make sure that they, too, receive
or can get the source code.  And you must show them these terms so they
know their rights.

  Developers that use the GNU GPL protect your rights with two steps:
(1) assert copyright on the software, and (2) offer you this License
giving you legal permission to copy, distribute and/or modify it.

  For the developers' and authors' protection, the GPL clearly explains
that there is no warranty for this free software.  For both users' and
authors' sake, the GPL requires that modified versions be marked as
changed, so that their problems will not be attributed erroneously to
authors of previous versions.

  Some devices are designed to deny users access to install or run
modified versions of the software inside them, although the manufacturer
can do so.  This is fundamentally incompatible with the aim of
protecting users' freedom to change the software.  The systematic
pattern of such abuse occurs in the area of products for individuals to
use, which is precisely where it is most unacceptable.  Therefore, we
have designed this version of the GPL to prohibit the practice for those
products.  If such problems arise substantially in other domains, we
stand ready to extend this provision to those domains in future versions
of the GPL, as needed to protect the freedom of users.

  Finally, every program is threatened constantly by software patents.
States should not allow patents to restrict development and use of
software on general-purpose computers, but in those that do, we wish to
avoid the special danger that patents applied to a free program could
make it effectively proprietary.  To prevent this, the GPL assures that
patents cannot be used to render the program non-free.

  The precise terms and conditions for copying, distribution and
modification follow.

                       TERMS AND CONDITIONS

  0. Definitions.

  "This License" refers to version 3 of the GNU General Public License.

  "Copyright" also means copyright-like laws that apply to other kinds of
works, such as semiconductor masks.

  "The Program" refers to any copyrightable work licensed under this
License.  Each licensee is addressed as "you".  "Licensees" and
"recipients" may be individuals or organizations.

  To "modify" a work means to copy from or adapt all or part of the work
in a fashion requiring copyright permission, other than the making of an
exact copy.  The resulting work is called a "modified version" of the
earlier work or a work "based on" the earlier work.

  A "covered work" means either the unmodified Program or a work based
on the Program.

  To "propagate" a work means to do anything with it that, without
permission, would make you directly or secondarily liable for
infringement under applicable copyright law, except executing it on a
computer or modifying a private copy.  Propagation includes copying,
distribution (with or without modification), making available to the
public, and in some countries other activities as well.

  To "convey" a work means any kind of propagation that enables other
parties to make or receive copies.  Mere interaction with a user through
a computer network, with no transfer of a copy, is not conveying.

  An interactive user interface displays "Appropriate Legal Notices"
to the extent that it includes a convenient and prominently visible
feature that (1) displays an appropriate copyright notice, and (2)
tells the user that there is no warranty for the work (except to the
extent that warranties are provided), that licensees may convey the
work under this License, and how to view a copy of this License.  If
the interface presents a list of user commands or options, such as a
menu, a prominent item in the list meets this criterion.

  1. Source Code.

  The "source code" for a work means the preferred form of the work
for making modifications to it.  "Object code" means any non-source
form of a work.

  A "Standard Interface" means an interface that either is an official
standard defined by a recognized standards body, or, in the case of
interfaces specified for a particular programming language, one that
is widely used among developers working in that language.

  The "System Libraries" of an executable work include anything, other
than the work as a whole, that (a) is included in the normal form of
packaging a Major Component, but which is not part of that Major
Component, and (b) serves only to enable use of the work with that
Major Component, or to implement a Standard Interface for which an
implementation is available to the public in source code form.  A
"Major Component", in this context, means a major essential component
(kernel, window system, and so on) of the specific operating system
(if any) on which the executable work runs, or a compiler used to
produce the work, or an object code interpreter used to run it.

  The "Corresponding Source" for a work in object code form means all
the source code needed to generate, install, and (for an executable
work) run the object code and to modify the work, including scripts to
control those activities.  However, it does not include the work's
System Libraries, or general-purpose tools or generally available free
programs which are used unmodified in performing those activities but
which are not part of the work.  For example, Corresponding Source
includes interface definition files associated with source files for
the work, and the source code for shared libraries and dynamically
linked subprograms that the work is specifically designed to require,
such as by intimate data communication or control flow between those
subprograms and other parts of the work.

  The Corresponding Source need not include anything that users
can regenerate automatically from other parts of the Corresponding
Source.

  The Corresponding Source for a work in source code form is that
same work.

  2. Basic Permissions.

  All rights granted under this License are granted for the term of
copyright on the Program, and are irrevocable provided the stated
conditions are met.  This License explicitly affirms your unlimited
permission to run the unmodified Program.  The output from running a
covered work is covered by this License only if the output, given its
content, constitutes a covered work.  This License acknowledges your
rights of fair use or other equivalent, as provided by copyright law.

  You may make, run and propagate covered works that you do not
convey, without conditions so long as your license otherwise remains
in force.  You may convey covered works to others for the sole purpose
of having them make modifications exclusively for you, or provide you
with facilities for running those works, provided that you comply with
the terms of this License in conveying all material for which you do
not control copyright.  Those thus making or running the covered works
for you must do so exclusively on your behalf, under your direction
and control, on terms that prohibit them from making any copies of
your copyrighted material outside their relationship with you.

  Conveying under any other circumstances is permitted solely under
the conditions stated below.  Sublicensing is not allowed; section 10
makes it unnecessary.

  3. Protecting Users' Legal Rights From Anti-Circumvention Law.

  No covered work shall be deemed part of an effective technological
measure under any applicable law fulfilling obligations under article
11 of the WIPO copyright treaty adopted on 20 December 1996, or
similar laws prohibiting or restricting circumvention of such
measures.

  When you convey a covered work, you waive any legal power to forbid
circumvention of technological measures to the extent such circumvention
is effected by exercising rights under this License with respect to
the covered work, and you disclaim any intention to limit operation or
modification of the work as a means of enforcing, against the work's
users, your or third parties' legal rights to forbid circumvention of
technological measures.

  4. Conveying Verbatim Copies.

  You may convey verbatim copies of the Program's source code as you
receive it, in any medium, provided that you conspicuously and
appropriately publish on each copy an appropriate copyright notice;
keep intact all notices stating that this License and any
non-permissive terms added in accord with section 7 apply to the code;
keep intact all notices of the absence of any warranty; and give all
recipients a copy of this License along with the Program.

  You may charge any price or no price for each copy that you convey,
and you may offer support or warranty protection for a fee.

  5. Conveying Modified Source Versions.

  You may convey a work based on the Program, or the modifications to
produce it from the Program, in the form of source code under the
terms of section 4, provided that you also meet all of these conditions:

    a) The work must carry prominent notices stating that you modified
    it, and giving a relevant date.

    b) The work must carry prominent notices stating that it is
    released under this License and any conditions added under section
    7.  This requirement modifies the requirement in section 4 to
    "keep intact all notices".

    c) You must license the entire work, as a whole, under this
    License to anyone who comes into possession of a copy.  This
    License will therefore apply, along with any applicable section 7
    additional terms, to the whole of the work, and all its parts,
    regardless of how they are packaged.  This License gives no
    permission to license the work in any other way, but it does not
    invalidate such permission if you have separately received it.

    d) If the work has interactive user interfaces, each must display
    Appropriate Legal Notices; however, if the Program has interactive
    interfaces that do not display Appropriate Legal Notices, your
    work need not make them do so.

  A compilation of a covered work with other separate and independent
works, which are not by their nature extensions of the covered work,
and which are not combined with it such as to form a larger program,
in or on a volume of a storage or distribution medium, is called an
"aggregate" if the compilation and its resulting copyright are not
used to limit the access or legal rights of the compilation's users
beyond what the individual works permit.  Inclusion of a covered work
in an aggregate does not cause this License to apply to the other
parts of the aggregate.

  6. Conveying Non-Source Forms.

  You may convey a covered work in object code form under the terms
of sections 4 and 5, provided that you also convey the
machine-readable Corresponding Source under the terms of this License,
in one of these ways:

    a) Convey the object code in, or embodied in, a physical product
    (including a physical distribution medium), accompanied by the
    Corresponding Source fixed on a durable physical medium
    customarily used for software interchange.

    b) Convey the object code in, or embodied in, a physical product
    (including a physical distribution medium), accompanied by a
    written offer, valid for at least three years and valid for as
    long as you offer spare parts or customer support for that product
    model, to give anyone who possesses the object code either (1) a
    copy of the Corresponding Source for all the software in the
    product that is covered by this License, on a durable physical
    medium customarily used for software interchange, for a price no
    more than your reasonable cost of physically performing this
    conveying of source, or (2) access to copy the
    Corresponding Source from a network server at no charge.

    c) Convey individual copies of the object code with a copy of the
    written offer to provide the Corresponding Source.  This
    alternative is allowed only occasionally and noncommercially, and
    only if you received the object code with such an offer, in accord
    with subsection 6b.

    d) Convey the object code by offering access from a designated
    place (gratis or for a charge), and offer equivalent access to the
    Corresponding Source in the same way through the same place at no
    further charge.  You need not require recipients to copy the
    Corresponding Source along with the object code.  If the place to
    copy the object code is a network server, the Corresponding Source
    may be on a different server (operated by you or a third party)
    that supports equivalent copying facilities, provided you maintain
    clear directions next to the object code saying where to find the
    Corresponding Source.  Regardless of what server hosts the
    Corresponding Source, you remain obligated to ensure that it is
    available for as long as needed to satisfy these requirements.

    e) Convey the object code using peer-to-peer transmission, provided
    you inform other peers where the object code and Corresponding
    Source of the work are being offered to the general public at no
    charge under subsection 6d.

  A separable portion of the object code, whose source code is excluded
from the Corresponding Source as a System Library, need not be
included in conveying the object code work.

  A "User Product" is either (1) a "consumer product", which means any
tangible personal property which is normally used for personal, family,
or household purposes, or (2) anything designed or sold for incorporation
into a dwelling.  In determining whether a product is a consumer product,
doubtful cases shall be resolved in favor of coverage.  For a particular
product received by a particular user, "normally used" refers to a
typical or common use of that class of product, regardless of the status
of the particular user or of the way in which the particular user
actually uses, or expects or is expected to use, the product.  A product
is a consumer product regardless of whether the product has substantial
commercial, industrial or non-consumer uses, unless such uses represent
the only significant mode of use of the product.

  "Installation Information" for a User Product means any methods,
procedures, authorization keys, or other information required to install
and execute modified versions of a covered work in that User Product from
a modified version of its Corresponding Source.  The information must
suffice to ensure that the continued functioning of the modified object
code is in no case prevented or interfered with solely because
modification has been made.

  If you convey an object code work under this section in, or with, or
specifically for use in, a User Product, and the conveying occurs as
part of a transaction in which the right of possession and use of the
User Product is transferred to the recipient in perpetuity or for a
fixed term (regardless of how the transaction is characterized), the
Corresponding Source conveyed under this section must be accompanied
by the Installation Information.  But this requirement does not apply
if neither you nor any third party retains the ability to install
modified object code on the User Product (for example, the work has
been installed in ROM).

  The requirement to provide Installation Information does not include a
requirement to continue to provide support service, warranty, or updates
for a work that has been modified or installed by the recipient, or for
the User Product in which it has been modified or installed.  Access to a
network may be denied when the modification itself materially and
adversely affects the operation of the network or violates the rules and
protocols for communication across the network.

  Corresponding Source conveyed, and Installation Information provided,
in accord with this section must be in a format that is publicly
documented (and with an implementation available to the public in
source code form), and must require no special password or key for
unpacking, reading or copying.

  7. Additional Terms.

  "Additional permissions" are terms that supplement the terms of this
License by making exceptions from one or more of its conditions.
Additional permissions that are applicable to the entire Program shall
be treated as though they were included in this License, to the extent
that they are valid under applicable law.  If additional permissions
apply only to part of the Program, that part may be used separately
under those permissions, but the entire Program remains governed by
this License without regard to the additional permissions.

  When you convey a copy of a covered work, you may at your option
remove any additional permissions from that copy, or from any part of
it.  (Additional permissions may be written to require their own
removal in certain cases when you modify the work.)  You may place
additional permissions on material, added by you to a covered work,
for which you have or can give appropriate copyright permission.

  Notwithstanding any other provision of this License, for material you
add to a covered work, you may (if authorized by the copyright holders of
that material) supplement the terms of this License with terms:

    a) Disclaiming warranty or limiting liability differently from the
    terms of sections 15 and 16 of this License; or

    b) Requiring preservation of specified reasonable legal notices or
    author attributions in that material or in the Appropriate Legal
    Notices displayed by works containing it; or

    c) Prohibiting misrepresentation of the origin of that material, or
    requiring that modified versions of such material be marked in
    reasonable ways as different from the original version; or

    d) Limiting the use for publicity purposes of names of licensors or
    authors of the material; or

    e) Declining to grant rights under trademark law for use of some
    trade names, trademarks, or service marks; or

    f) Requiring indemnification of licensors and authors of that
    material by anyone who conveys the material (or modified versions of
    it) with contractual assumptions of liability to the recipient, for
    any liability that these contractual assumptions directly impose on
    those licensors and authors.

  All other non-permissive additional terms are considered "further
restrictions" within the meaning of section 10.  If the Program as you
received it, or any part of it, contains a notice stating that it is
governed by this License along with a term that is a further
restriction, you may remove that term.  If a license document contains
a further restriction but permits relicensing or conveying under this
License, you may add to a covered work material governed by the terms
of that license document, provided that the further restriction does
not survive such relicensing or conveying.

  If you add terms to a covered work in accord with this section, you
must place, in the relevant source files, a statement of the
additional terms that apply to those files, or a notice indicating
where to find the applicable terms.

  Additional terms, permissive or non-permissive, may be stated in the
form of a separately written license, or stated as exceptions;
the above requirements apply either way.

  8. Termination.

  You may not propagate or modify a covered work except as expressly
provided under this License.  Any attempt otherwise to propagate or
modify it is void, and will automatically terminate your rights under
this License (including any patent licenses granted under the third
paragraph of section 11).

  However, if you cease all violation of this License, then your
license from a particular copyright holder is reinstated (a)
provisionally, unless and until the copyright holder explicitly and
finally terminates your license, and (b) permanently, if the copyright
holder fails to notify you of the violation by some reasonable means
prior to 60 days after the cessation.

  Moreover, your license from a particular copyright holder is
reinstated permanently if the copyright holder notifies you of the
violation by some reasonable means, this is the first time you have
received notice of violation of this License (for any work) from that
copyright holder, and you cure the violation prior to 30 days after
your receipt of the notice.

  Termination of your rights under this section does not terminate the
licenses of parties who have received copies or rights from you under
this License.  If your rights have been terminated and not permanently
reinstated, you do not qualify to receive new licenses for the same
material under section 10.

  9. Acceptance Not Required for Having Copies.

  You are not required to accept this License in order to receive or
run a copy of the Program.  Ancillary propagation of a covered work
occurring solely as a consequence of using peer-to-peer transmission
to receive a copy likewise does not require acceptance.  However,
nothing other than this License grants you permission to propagate or
modify any covered work.  These actions infringe copyright if you do
not accept this License.  Therefore, by modifying or propagating a
covered work, you indicate your acceptance of this License to do so.

  10. Automatic Licensing of Downstream Recipients.

  Each time you convey a covered work, the recipient automatically
receives a license from the original licensors, to run, modify and
propagate that work, subject to this License.  You are not responsible
for enforcing compliance by third parties with this License.

  An "entity transaction" is a transaction transferring control of an
organization, or substantially all assets of one, or subdividing an
organization, or merging organizations.  If propagation of a covered
work results from an entity transaction, each party to that
transaction who receives a copy of the work also receives whatever
licenses to the work the party's predecessor in interest had or could
give under the previous paragraph, plus a right to possession of the
Corresponding Source of the work from the predecessor in interest, if
the predecessor has it or can get it with reasonable efforts.

  You may not impose any further restrictions on the exercise of the
rights granted or affirmed under this License.  For example, you may
not impose a license fee, royalty, or other charge for exercise of
rights granted under this License, and you may not initiate litigation
(including a cross-claim or counterclaim in a lawsuit) alleging that
any patent claim is infringed by making, using, selling, offering for
sale, or importing the Program or any portion of it.

  11. Patents.

  A "contributor" is a copyright holder who authorizes use under this
License of the Program or a work on which the Program is based.  The
work thus licensed is called the contributor's "contributor version".

  A contributor's "essential patent claims" are all patent claims
owned or controlled by the contributor, whether already acquired or
hereafter acquired, that would be infringed by some manner, permitted
by this License, of making, using, or selling its contributor version,
but do not include claims that would be infringed only as a
consequence of further modification of the contributor version.  For
purposes of this definition, "control" includes the right to grant
patent sublicenses in a manner consistent with the requirements of
this License.

  Each contributor grants you a non-exclusive, worldwide, royalty-free
patent license under the contributor's essential patent claims, to
make, use, sell, offer for sale, import and otherwise run, modify and
propagate the contents of its contributor version.

  In the following three paragraphs, a "patent license" is any express
agreement or commitment, however denominated, not to enforce a patent
(such as an express permission to practice a patent or covenant not to
sue for patent infringement).  To "grant" such a patent license to a
party means to make such an agreement or commitment not to enforce a
patent against the party.

  If you convey a covered work, knowingly relying on a patent license,
and the Corresponding Source of the work is not available for anyone
to copy, free of charge and under the terms of this License, through a
publicly available network server or other readily accessible means,
then you must either (1) cause the Corresponding Source to be so
available, or (2) arrange to deprive yourself of the benefit of the
patent license for this particular work, or (3) arrange, in a manner
consistent with the requirements of this License, to extend the patent
license to downstream recipients.  "Knowingly relying" means you have
actual knowledge that, but for the patent license, your conveying the
covered work in a country, or your recipient's use of the covered work
in a country, would infringe one or more identifiable patents in that
country that you have reason to believe are valid.

  If, pursuant to or in connection with a single transaction or
arrangement, you convey, or propagate by procuring conveyance of, a
covered work, and grant a patent license to some of the parties
receiving the covered work authorizing them to use, propagate, modify
or convey a specific copy of the covered work, then the patent license
you grant is automatically extended to all recipients of the covered
work and works based on it.

  A patent license is "discriminatory" if it does not include within
the scope of its coverage, prohibits the exercise of, or is
conditioned on the non-exercise of one or more of the rights that are
specifically granted under this License.  You may not convey a covered
work if you are a party to an arrangement with a third party that is
in the business of distributing software, under which you make payment
to the third party based on the extent of your activity of conveying
the work, and under which the third party grants, to any of the
parties who would receive the covered work from you, a discriminatory
patent license (a) in connection with copies of the covered work
conveyed by you (or copies made from those copies), or (b) primarily
for and in connection with specific products or compilations that
contain the covered work, unless you entered into that arrangement,
or that patent license was granted, prior to 28 March 2007.

  Nothing in this License shall be construed as excluding or limiting
any implied license or other defenses to infringement that may
otherwise be available to you under applicable patent law.

  12. No Surrender of Others' Freedom.

  If conditions are imposed on you (whether by court order, agreement or
otherwise) that contradict the conditions of this License, they do not
excuse you from the conditions of this License.  If you cannot convey a
covered work so as to satisfy simultaneously your obligations under this
License and any other pertinent obligations, then as a consequence you may
not convey it at all.  For example, if you agree to terms that obligate you
to collect a royalty for further conveying from those to whom you convey
the Program, the only way you could satisfy both those terms and this
License would be to refrain entirely from conveying the Program.

  13. Use with the GNU Affero General Public License.

  Notwithstanding any other provision of this License, you have
permission to link or combine any covered work with a work licensed
under version 3 of the GNU Affero General Public License into a single
combined work, and to convey the resulting work.  The terms of this
License will continue to apply to the part which is the covered work,
but the special requirements of the GNU Affero General Public License,
section 13, concerning interaction through a network will apply to the
combination as such.

  14. Revised Versions of this License.

  The Free Software Foundation may publish revised and/or new versions of
the GNU General Public License from time to time.  Such new versions will
be similar in spirit to the present version, but may differ in detail to
address new problems or concerns.

  Each version is given a distinguishing version number.  If the
Program specifies that a certain numbered version of the GNU General
Public License "or any later version" applies to it, you have the
option of following the terms and conditions either of that numbered
version or of any later version published by the Free Software
Foundation.  If the Program does not specify a version number of the
GNU General Public License, you may choose any version ever published
by the Free Software Foundation.

  If the Program specifies that a proxy can decide which future
versions of the GNU General Public License can be used, that proxy's
public statement of acceptance of a version permanently authorizes you
to choose that version for the Program.

  Later license versions may give you additional or different
permissions.  However, no additional obligations are imposed on any
author or copyright holder as a result of your choosing to follow a
later version.

  15. Disclaimer of Warranty.

  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY
OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
ALL NECESSARY SERVICING, REPAIR OR CORRECTION.

  16. Limitation of Liability.

  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS
THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY
GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE
USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
SUCH DAMAGES.

  17. Interpretation of Sections 15 and 16.

  If the disclaimer of warranty and limitation of liability provided
above cannot be given local legal effect according to their terms,
reviewing courts shall apply local law that most closely approximates
an absolute waiver of all civil liability in connection with the
Program, unless a warranty or assumption of liability accompanies a
copy of the Program in return for a fee.

                     END OF TERMS AND CONDITIONS

            How to Apply These Terms to Your New Programs

  If you develop a new program, and you want it to be of the greatest
possible use to the public, the best way to achieve this is to make it
free software which everyone can redistribute and change under these terms.

  To do so, attach the following notices to the program.  It is safest
to attach them to the start of each source file to most effectively
state the exclusion of warranty; and each file should have at least
the "copyright" line and a pointer to where the full notice is found.

    <one line to give the program's name and a brief idea of what it does.>
    Copyright (C) <year>  <name of author>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.

Also add information on how to contact you by electronic and paper mail.

  If the program does terminal interaction, make it output a short
notice like this when it starts in an interactive mode:

    <program>  Copyright (C) <year>  <name of author>
    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
    This is free software, and you are welcome to redistribute it
    under certain conditions; type `show c' for details.

The hypothetical commands `show w' and `show c' should show the appropriate
parts of the General Public License.  Of course, your program's commands
might be different; for a GUI interface, you would use an "about box".

  You should also get your employer (if you work as a programmer) or school,
if any, to sign a "copyright disclaimer" for the program, if necessary.
For more information on this, and how to apply and follow the GNU GPL, see
<https://www.gnu.org/licenses/>.

  The GNU General Public License does not permit incorporating your program
into proprietary programs.  If your program is a subroutine library, you
may consider it more useful to permit linking proprietary applications with
the library.  If this is what you want to do, use the GNU Lesser General
Public License instead of this License.  But first, please read
<https://www.gnu.org/licenses/why-not-lgpl.html>.

GCC RUNTIME LIBRARY EXCEPTION

Version 3.1, 31 March 2009

Copyright (C) 2009 Free Software Foundation, Inc.

Everyone is permitted to copy and distribute verbatim copies of this
license document, but changing it is not allowed.

This GCC Runtime Library Exception ("Exception") is an additional
permission under section 7 of the GNU General Public License, version
3 ("GPLv3"). It applies to a given file (the "Runtime Library") that
bears a notice placed by the copyright holder of the file stating that
the file is governed by GPLv3 along with this Exception.

When you use GCC to compile a program, GCC may combine portions of
certain GCC header files and runtime libraries with the compiled
program. The purpose of this Exception is to allow compilation of
non-GPL (including proprietary) programs to use, in this way, the
header files and runtime libraries covered by this Exception.

0. Definitions.

A file is an "Independent Module" if it either requires the Runtime
Library for execution after a Compilation Process, or makes use of an
interface provided by the Runtime Library, but is not otherwise based
on the Runtime Library.

"GCC" means a version of the GNU Compiler Collection, with or without
modifications, governed by version 3 (or a specified later version) of
the GNU General Public License (GPL) with the option of using any
subsequent versions published by the FSF.

"GPL-compatible Software" is software whose conditions of propagation,
modification and use would permit combination with GCC in accord with
the license of GCC.

"Target Code" refers to output from any compiler for a real or virtual
target processor architecture, in executable form or suitable for
input to an assembler, loader, linker and/or execution
phase. Notwithstanding that, Target Code does not include data in any
format that is used as a compiler intermediate representation, or used
for producing a compiler intermediate representation.

The "Compilation Process" transforms code entirely represented in
non-intermediate languages designed for human-written code, and/or in
Java Virtual Machine byte code, into Target Code. Thus, for example,
use of source code generators and preprocessors need not be considered
part of the Compilation Process, since the Compilation Process can be
understood as starting with the output of the generators or
preprocessors.

A Compilation Process is "Eligible" if it is done using GCC, alone or
with other GPL-compatible software, or if it is done without using any
work based on GCC. For example, using non-GPL-compatible Software to
optimize any GCC intermediate representations would not qualify as an
Eligible Compilation Process.

1. Grant of Additional Permission.

You have permission to propagate a work of Target Code formed by
combining the Runtime Library with Independent Modules, even if such
propagation would otherwise violate the terms of GPLv3, provided that
all Target Code was generated by Eligible Compilation Processes. You
may then convey such a combination under terms of your choice,
consistent with the licensing of the Independent Modules.

2. No Weakening of GCC Copyleft.

The availability of this Exception does not imply any general
presumption that third-party software is unaffected by the copyleft
requirements of the license of GCC.

-------------------------------------------------------------------------------

11. base64*, Copyright © 2004-2017 by René Nyffenegger

This source code is provided 'as-is', without any express or implied
warranty. In no event will the author be held liable for any damages
arising from the use of this software.

Permission is granted to anyone to use this software for any purpose,
including commercial applications, and to alter it and redistribute it
freely, subject to the following restrictions:

1. The origin of this source code must not be misrepresented; you must not
   claim that you wrote the original source code. If you use this source code
   in a product, an acknowledgment in the product documentation would be
   appreciated but is not required.

2. Altered source versions must be plainly marked as such, and must not be
   misrepresented as being the original source code.

3. This notice may not be removed or altered from any source distribution.

-------------------------------------------------------------------------------

12. HPL - High-Performance Linpack Benchmark:
    HPL - 2.3 - December 2, 2018
    Antoine P. Petitet
    University of Tennessee, Knoxville
    Innovative Computing Laboratory
    (C) Copyright 2000-2008 All Rights Reserved

    HPL License

 Redistribution  and  use in  source and binary forms, with or without modification, are  permitted provided  that the following  conditions are met:

 1. Redistributions  of  source  code  must retain the above copyright notice, this list of conditions and the following disclaimer.

 2. Redistributions in binary form must reproduce  the above copyright notice, this list of conditions,  and the following disclaimer in the documentation and/or other materials provided with the distribution.

 3. All  advertising  materials  mentioning  features  or  use of this software must display the following acknowledgement:
   This  product  includes  software  developed  at  the  University  of Tennessee, Knoxville, Innovative Computing Laboratory.

 4. The name of the  University,  the name of the  Laboratory,  or the names  of  its  contributors  may  not  be used to endorse or promote products  derived   from   this  software  without  specific  written permission.

 -- Disclaimer:

THIS  SOFTWARE  IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,  INCLUDING,  BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE UNIVERSITY OR  CONTRIBUTORS  BE  LIABLE FOR ANY  DIRECT,  INDIRECT,  INCIDENTAL, SPECIAL,  EXEMPLARY,  OR  CONSEQUENTIAL DAMAGES  (INCLUDING,  BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS INTERRUPTION)  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,  STRICT LIABILITY,  OR TORT(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

-------------------------------------------------------------------------------

13. JSON for Modern C++*

The class is licensed under the MIT License:

Copyright © 2013-2019 Niels Lohmann

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

The class contains the UTF-8 Decoder from Bjoern Hoehrmann which is licensed under the MIT License (see above). Copyright © 2008-2009 Björn Hoehrmann bjoern@hoehrmann.de

The class contains a slightly modified version of the Grisu2 algorithm from Florian Loitsch which is licensed under the MIT License (see above). Copyright © 2009 Florian Loitsch

The class contains a copy of Hedley from Evan Nemerson which is licensed as CC0-1.0.

* Other names and brands may be claimed as the property of others.

-------------------------------------------------------------------------------

14. HPCG: High Performance Conjugate Gradient Benchmark:
    HPCG - 3.1 - March 28, 2019
    Michael A. Heroux
    Scalable Algorithms Group, Center for Computing Research
    Sandia National Laboratories, Albuquerque, NM
    Piotr Luszczek
    Jack Dongarra
    University of Tennessee, Knoxville
    Innovative Computing Laboratory
    (C) Copyright 2013-2019 All Rights Reserved

Modified BSD License

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions, and the following disclaimer in the documentation and/or other materials provided with the distribution.

3. The name of the University, the name of the Laboratory, or the names of its contributors may not be used to endorse or promote products derived from this software without specific written permission.

-- Disclaimer:

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE UNIVERSITY OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

-------------------------------------------------------------------------------

15. Intel(R) OpenMP Runtime Library

End User License Agreement for the Intel Compiler Runtime Libraries
IMPORTANT - READ BEFORE COPYING, DISTRIBUTING, INSTALLING OR USING.

Do not copy, distribute, install, or use the Materials provided under this license agreement ("Agreement"), until you have carefully read the following terms and conditions.

By copying, distributing, installing, or otherwise using the Materials, you agree to be bound by the terms of this Agreement. If you do not agree to the terms of this Agreement, do not copy, distribute, install, or use the Materials.

End User License Agreement for the Intel Compiler Runtime Libraries

1. LICENSE DEFINITIONS:

A. "Materials" are defined as the software, documentation, license key codes and other materials, including any updates and upgrade thereto that are provided to you under this Agreement.

2. LICENSE GRANT:

A. Subject to all of the terms and conditions of this Agreement, Intel Corporation ("Intel") grants to you a non-exclusive, non-assignable, copyright license to copy, install and use the Materials on a reasonable number of computer systems that will be used internally.

3. LICENSE RESTRICTIONS:

A. If you receive your first copy of the Materials electronically, and a second copy on media, then you may use the second copy only in accordance with your applicable license stated in this Agreement, or for backup or archival purposes. You may not provide the second copy to another user.

B. You may NOT: (i) use or copy the Materials except as provided in this Agreement; (ii) rent or lease the Materials to any third party; (iii) assign this Agreement or transfer the Materials without the express written consent of Intel, except as specified in Section 3.C below; (iv) modify, adapt, or translate the Materials in whole or in part except as provided in this Agreement; (v) reverse engineer, decompile, or disassemble the Materials; (vi) attempt to modify or tamper with the normal function of a license manager that regulates usage of the Materials; (vii) distribute, sublicense or transfer the Materials or any portions thereof to any third party except as provided in this Agreement.

C. SOFTWARE TRANSFER: You may permanently transfer the Materials and all of your rights under this Agreement to another party (“Recipient”) only if you notify Intel of the transfer by sending a letter to Intel certifying that you retain no copies of the Materials and that the Recipient has agreed in writing to be bound by all of the terms and conditions of this Agreement. Please send such letter to:

Intel Corporation
2111 NE 25th Avenue
Hillsboro, OR 97124
Attn: DPD Contracts Management, JF1-15

4. COPYRIGHT: Title to the Materials and all copies thereof remain with Intel or its suppliers. The Materials are copyrighted and are protected by United States copyright laws and international treaty provisions. You will not remove any copyright notice from the Materials. You agree to prevent any unauthorized copying of the Materials. Except as expressly provided herein, no license or right is granted to you directly or by implication, inducement, estoppel or otherwise, specifically Intel does not grant any express or implied right to you under Intel patents, copyrights, trademarks, or trade secret information.

5. NO WARRANTY AND LIMITED REPLACEMENT: THE MATERIALS AND INFORMATION ARE PROVIDED "AS IS" WITH NO WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY IMPLIED WARRANTY OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT OF INTELLECTUAL PROPERTY RIGHTS, OR ANY WARRANTY OTHERWISE ARISING OUT OF ANY PROPOSAL, SPECIFICATION, OR SAMPLE. If the media on which the Materials are furnished are found to be defective in material or workmanship under normal use for a period of ninety (90) days from the date of receipt, Intel's entire liability and your exclusive remedy shall be the replacement of the media. This offer is void if the media defect results from accident, abuse, or misapplication.

6. LIMITATION OF LIABILITY: THE ABOVE REPLACEMENT PROVISION IS THE ONLY WARRANTY OF ANY KIND. INTEL OFFERS NO OTHER WARRANTY EITHER EXPRESS OR IMPLIED INCLUDING THOSE OF MERCHANTABILITY, NONINFRINGEMENT OF THIRD- PARTY INTELLECTUAL PROPERTY OR FITNESS FOR A PARTICULAR PURPOSE. NEITHER INTEL NOR ITS SUPPLIERS SHALL BE LIABLE FOR ANY DAMAGES WHATSOEVER (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR OTHER LOSS) ARISING OUT OF THE USE OF OR INABILITY TO USE THE SOFTWARE, EVEN IF INTEL HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. BECAUSE SOME JURISDICTIONS PROHIBIT THE EXCLUSION OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES, THE ABOVE LIMITATION MAY NOT APPLY TO YOU.

7. UNAUTHORIZED USE: THE MATERIALS ARE NOT DESIGNED, INTENDED, OR AUTHORIZED FOR USE IN ANY TYPE OF SYSTEM OR APPLICATION IN WHICH THE FAILURE OF THE MATERIALS COULD CREATE A SITUATION WHERE PERSONAL INJURY OR DEATH MAY OCCUR (E.G MEDICAL SYSTEMS, LIFE SUSTAINING OR LIFE SAVING SYSTEMS). Should the buyer purchase or use the Materials for any such unintended or unauthorized use, the buyer shall indemnify and hold Intel and its officers, subsidiaries and affiliates harmless against all claims, costs, damages, and expenses, and reasonable attorney fees arising out of, directly or indirectly, any claim of product liability, personal injury or death associated with such unintended or unauthorized use, even if such claim alleges that Intel was negligent regarding the design or manufacture of the part.

8. USER SUBMISSIONS: You agree that any material, information or other communication you transmit or post to an Intel website or provide to Intel under this Agreement will be considered non-confidential and non-proprietary ("Communications"). Intel will have no obligations with respect to the Communications. You agree that Intel and its designees will be free to copy, modify, create derivative works, publicly display, disclose, distribute, license and sublicense through multiple tiers of distribution and licensees, incorporate and otherwise use the Communications and all data, images, sounds, text, and other things embodied therein, including derivative works thereto, for any and all commercial or noncommercial purposes. You are prohibited from posting or transmitting to or from an Intel website or provide to Intel any unlawful, threatening, libelous, defamatory, obscene, pornographic, or other material that would violate any law. If you wish to provide Intel with your confidential information, Intel requires a non-disclosure agreement (“NDA”) to receive such confidential information, so please contact your Intel representative to ensure the proper NDA is in place.

9. TERMINATION OF THIS LICENSE: This Agreement becomes effective on the date you accept this Agreement and will continue until terminated as provided for in this Agreement. If you are using the Materials under the control of a time-limited license, for example an Evaluation License, this Agreement terminates without notice on the last day of the time period, which is controlled by the license key code for the Materials. Intel may terminate this license at any time if you are in breach of any of its terms and conditions. Upon termination, you will immediately return to Intel or destroy the Materials and all copies thereof.

10. U.S. GOVERNMENT RESTRICTED RIGHTS: The Materials are provided with "RESTRICTED RIGHTS". Use, duplication or disclosure by the Government is subject to restrictions set forth in FAR52.227-14 and DFAR252.227-7013 et seq. or its successor. Use of the Materials by the Government constitutes acknowledgment of Intel's rights in them.

11. APPLICABLE LAWS: Any claim arising under or relating to this Agreement shall be governed by the internal substantive laws of the State of Delaware, without regard to principles of conflict of laws. You agree that the terms of the United Nations Convention on Contracts for the Sale of Goods do not apply to this Agreement. You agree that your distribution and export/re-export of the Software and permitted modifications shall be in compliance with the laws, regulations, orders or other restrictions of applicable export laws.

12. THIRD PARTY PROGRAMS. The Materials may include third party programs or materials. The license terms with those programs or materials apply to your use of them, and Intel is not liable for them.

* Other names and brands may be claimed as the property of others

licensing/third-party-programs-openmp.txt

-------------------------------------------------------------------------------

